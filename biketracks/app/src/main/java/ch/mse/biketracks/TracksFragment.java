package ch.mse.biketracks;

import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.io.ByteArrayOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

import ch.mse.biketracks.adapters.MyTracksRecyclerViewAdapter;
import ch.mse.biketracks.adapters.RecyclerItemClickListener;
import ch.mse.biketracks.database.DatabaseHelper;
import ch.mse.biketracks.models.Point;
import ch.mse.biketracks.models.Track;

public class TracksFragment extends Fragment {

    ArrayList<Track> tracks = new ArrayList<>();
    Context mContext;
    MyTracksRecyclerViewAdapter tracksAdapter;

    /**
     * Mandatory empty constructor for the fragment manager to instantiate the
     * fragment (e.g. upon screen orientation changes).
     */
    public TracksFragment() {

        List<Point> points = new ArrayList<>();
        points.add(new Point(46.78888733, 6.74366133, 449));
        points.add(new Point(46.78888733, 6.74366133, 449));
        points.add(new Point(46.78886933, 6.7436675, 449));
        points.add(new Point(46.78885417, 6.74366817, 447));
        points.add(new Point(46.78883633, 6.74366983, 446));
        points.add(new Point(46.78881633, 6.74366917, 446));
        points.add(new Point(46.78879133, 6.74367083, 445));
        points.add(new Point(46.78875683, 6.7436815, 444));
        points.add(new Point(46.7887165, 6.74369767, 444));
        points.add(new Point(46.78867283, 6.74371517, 443));
        points.add(new Point(46.78863317, 6.74372667, 442));
        points.add(new Point(46.78859183, 6.74373667, 442));
        points.add(new Point(46.78854833, 6.743744, 442));
        points.add(new Point(46.788501, 6.74375183, 441));
        points.add(new Point(46.78845267, 6.74375983, 441));
        points.add(new Point(46.78840283, 6.74377133, 440));
        points.add(new Point(46.78835417, 6.74378233, 439));
        points.add(new Point(46.78830433, 6.743796, 438));
        points.add(new Point(46.78825633, 6.74380683, 439));
        points.add(new Point(46.7882085, 6.74381633, 439));
        points.add(new Point(46.78816067, 6.74382233, 439));
        points.add(new Point(46.7881125, 6.74382767, 441));
        points.add(new Point(46.78806383, 6.74383217, 442));
        points.add(new Point(46.7880165, 6.7438355, 443));
        points.add(new Point(46.78796817, 6.743838, 443));
        points.add(new Point(46.78791917, 6.7438395, 444));
        points.add(new Point(46.78786717, 6.74384367, 445));
        points.add(new Point(46.78781183, 6.74385017, 446));
        points.add(new Point(46.78775417, 6.74385933, 447));
        points.add(new Point(46.7876965, 6.74386783, 448));
        points.add(new Point(46.787639, 6.74387667, 449));
        points.add(new Point(46.7875815, 6.74388483, 450));
        points.add(new Point(46.7875235, 6.74389317, 451));
        points.add(new Point(46.7874665, 6.74390283, 452));
        points.add(new Point(46.78741117, 6.74391367, 453));
        points.add(new Point(46.7873565, 6.74392567, 453));
        points.add(new Point(46.7873025, 6.74393817, 454));
        points.add(new Point(46.78724967, 6.74395333, 455));
        points.add(new Point(46.78719967, 6.7439695, 455));
        points.add(new Point(46.787152, 6.74398683, 456));
        points.add(new Point(46.78710483, 6.744004, 457));
        points.add(new Point(46.78705867, 6.74402283, 458));
        points.add(new Point(46.78701217, 6.74404183, 458));
        points.add(new Point(46.78696667, 6.74405933, 459));
        points.add(new Point(46.7869215, 6.74407617, 459));
        points.add(new Point(46.78687567, 6.74409417, 459));
        points.add(new Point(46.78683, 6.74411367, 460));
        points.add(new Point(46.786784, 6.744132, 460));
        points.add(new Point(46.7867415, 6.74414933, 462));
        points.add(new Point(46.78669733, 6.74416533, 462));
        points.add(new Point(46.7866515, 6.7441835, 462));
        points.add(new Point(46.7866035, 6.74419683, 462));
        points.add(new Point(46.7865555, 6.74421017, 463));
        points.add(new Point(46.78650283, 6.7442185, 459));
        points.add(new Point(46.78644767, 6.744229, 459));
        points.add(new Point(46.7863925, 6.7442395, 458));
        points.add(new Point(46.78634167, 6.74425017, 458));
        points.add(new Point(46.78629, 6.74426117, 459));
        points.add(new Point(46.78623883, 6.74426783, 458));
        points.add(new Point(46.786187, 6.74427567, 458));
        points.add(new Point(46.786135, 6.7442845, 459));
        points.add(new Point(46.78608383, 6.74429467, 459));
        points.add(new Point(46.786029, 6.74430717, 459));
        points.add(new Point(46.785966, 6.74431517, 456));
        points.add(new Point(46.78589983, 6.74431483, 455));
        points.add(new Point(46.78583467, 6.7443025, 455));
        points.add(new Point(46.78578133, 6.744279, 455));
        points.add(new Point(46.78572983, 6.74425333, 456));
        points.add(new Point(46.78568117, 6.74422617, 456));
        points.add(new Point(46.78562883, 6.74420367, 455));
        points.add(new Point(46.78557617, 6.7441865, 455));
        points.add(new Point(46.785526, 6.744172, 455));
        points.add(new Point(46.78548067, 6.74416017, 455));
        points.add(new Point(46.78543767, 6.74415167, 455));
        points.add(new Point(46.78539517, 6.74414783, 455));
        points.add(new Point(46.78535167, 6.744151, 454));
        points.add(new Point(46.78530867, 6.74416117, 454));
        points.add(new Point(46.7852655, 6.74417883, 454));
        points.add(new Point(46.78522367, 6.7441995, 453));
        points.add(new Point(46.7851795, 6.74422283, 453));
        points.add(new Point(46.78513433, 6.74424917, 454));
        points.add(new Point(46.78508567, 6.74427933, 454));
        points.add(new Point(46.78503617, 6.7443105, 454));
        points.add(new Point(46.78498567, 6.74434233, 454));
        points.add(new Point(46.78493617, 6.74437517, 454));
        points.add(new Point(46.78489033, 6.74440517, 456));
        points.add(new Point(46.78484583, 6.7444335, 457));
        points.add(new Point(46.78479917, 6.7444645, 457));
        points.add(new Point(46.7847485, 6.74450117, 457));
        points.add(new Point(46.78469583, 6.74454, 457));
        points.add(new Point(46.784646, 6.74457283, 457));
        points.add(new Point(46.78460167, 6.74460667, 458));
        points.add(new Point(46.78456117, 6.7446445, 460));
        points.add(new Point(46.784518, 6.744692, 460));
        points.add(new Point(46.7844775, 6.74473617, 462));
        points.add(new Point(46.78443417, 6.74477417, 462));
        points.add(new Point(46.78439333, 6.744801, 462));
        points.add(new Point(46.78434267, 6.74483183, 463));
        points.add(new Point(46.78428683, 6.74486933, 465));
        points.add(new Point(46.78423283, 6.7449115, 466));
        points.add(new Point(46.78418217, 6.74494567, 466));
        points.add(new Point(46.784116, 6.7449335, 470));
        points.add(new Point(46.78404117, 6.744909, 468));
        points.add(new Point(46.783964, 6.7448775, 467));
        points.add(new Point(46.78390633, 6.74487483, 467));
        points.add(new Point(46.78385617, 6.74486667, 467));
        points.add(new Point(46.78380517, 6.7448575, 468));
        points.add(new Point(46.78375417, 6.74484883, 468));
        points.add(new Point(46.7837035, 6.74484233, 468));
        points.add(new Point(46.78365333, 6.74483417, 468));
        points.add(new Point(46.7836035, 6.7448215, 467));
        points.add(new Point(46.7835485, 6.74481267, 466));
        points.add(new Point(46.7834915, 6.74480567, 467));
        points.add(new Point(46.78343383, 6.74480283, 467));
        points.add(new Point(46.78337767, 6.74479883, 468));
        points.add(new Point(46.78332483, 6.7447945, 468));
        points.add(new Point(46.7832725, 6.74479067, 469));
        points.add(new Point(46.78322217, 6.74478633, 469));
        points.add(new Point(46.7831735, 6.74478717, 469));
        points.add(new Point(46.78313267, 6.74479583, 470));
        points.add(new Point(46.78309817, 6.7448135, 470));
        points.add(new Point(46.78307183, 6.744838, 469));
        points.add(new Point(46.783045, 6.744863, 470));
        points.add(new Point(46.783018, 6.74488933, 470));
        points.add(new Point(46.78298867, 6.744913, 470));
        points.add(new Point(46.78295933, 6.74493617, 471));
        points.add(new Point(46.78293283, 6.74495317, 472));
        points.add(new Point(46.78289017, 6.74498533, 471));
        points.add(new Point(46.78283333, 6.74502367, 471));
        points.add(new Point(46.78275967, 6.7450735, 471));
        points.add(new Point(46.78268467, 6.74511817, 470));
        points.add(new Point(46.78261783, 6.74515483, 471));
        points.add(new Point(46.78255283, 6.74517367, 471));
        points.add(new Point(46.78249433, 6.74517667, 471));
        points.add(new Point(46.782434, 6.7451735, 470));
        points.add(new Point(46.78237833, 6.74517333, 470));
        points.add(new Point(46.78232633, 6.74517183, 471));
        points.add(new Point(46.78227367, 6.745178, 472));
        points.add(new Point(46.78221667, 6.745193, 471));
        points.add(new Point(46.7821575, 6.74521283, 471));
        points.add(new Point(46.7820995, 6.74523217, 472));
        points.add(new Point(46.78204917, 6.745248, 472));
        points.add(new Point(46.78200133, 6.745264, 472));
        points.add(new Point(46.7819585, 6.74527733, 472));
        points.add(new Point(46.7819235, 6.745293, 473));
        points.add(new Point(46.78189683, 6.74530733, 474));
        points.add(new Point(46.7818755, 6.74531917, 475));
        points.add(new Point(46.7818565, 6.74532217, 475));
        points.add(new Point(46.781841, 6.74532, 475));
        points.add(new Point(46.781828, 6.74531217, 477));
        points.add(new Point(46.78181117, 6.745305, 478));
        points.add(new Point(46.78179317, 6.74529567, 480));
        points.add(new Point(46.78177183, 6.74528917, 481));
        points.add(new Point(46.78175217, 6.74528383, 480));
        points.add(new Point(46.78173517, 6.74527667, 480));
        points.add(new Point(46.7817165, 6.7452725, 480));
        points.add(new Point(46.78169317, 6.74526983, 481));
        points.add(new Point(46.7816615, 6.7452755, 481));
        points.add(new Point(46.78162217, 6.7452875, 482));
        points.add(new Point(46.78158283, 6.74530617, 482));
        points.add(new Point(46.78154317, 6.74532767, 483));
        points.add(new Point(46.78149983, 6.7453615, 484));
        points.add(new Point(46.78144517, 6.74542617, 477));
        points.add(new Point(46.78138617, 6.74550367, 477));
        points.add(new Point(46.7813305, 6.74557817, 477));
        points.add(new Point(46.78128183, 6.74563, 477));
        points.add(new Point(46.781236, 6.745681, 477));
        points.add(new Point(46.78119117, 6.74573067, 477));
        points.add(new Point(46.78115017, 6.74578267, 478));
        points.add(new Point(46.78111367, 6.7458345, 478));
        points.add(new Point(46.781079, 6.74588883, 479));
        points.add(new Point(46.781045, 6.74593917, 479));
        points.add(new Point(46.781014, 6.7459815, 479));
        points.add(new Point(46.7809855, 6.74601967, 480));
        points.add(new Point(46.7809615, 6.746058, 480));
        points.add(new Point(46.78093317, 6.74609883, 480));
        points.add(new Point(46.780908, 6.74613883, 480));
        points.add(new Point(46.78088733, 6.74617933, 480));
        points.add(new Point(46.78087283, 6.7462195, 481));
        points.add(new Point(46.78086167, 6.74626033, 481));
        points.add(new Point(46.78084683, 6.74629883, 481));
        points.add(new Point(46.78083, 6.7463375, 482));
        points.add(new Point(46.78080783, 6.7463765, 482));
        points.add(new Point(46.7807875, 6.74641567, 482));
        points.add(new Point(46.78077183, 6.7464535, 483));
        points.add(new Point(46.78075417, 6.74649117, 483));
        points.add(new Point(46.78072917, 6.746529, 483));
        points.add(new Point(46.780692, 6.74657067, 484));
        points.add(new Point(46.7806545, 6.74661483, 484));
        points.add(new Point(46.78061467, 6.74666667, 485));
        points.add(new Point(46.780578, 6.74672467, 485));
        points.add(new Point(46.78054067, 6.746783, 486));
        points.add(new Point(46.78050567, 6.74683517, 486));
        points.add(new Point(46.78046617, 6.7468875, 487));
        points.add(new Point(46.78042517, 6.746943, 487));
        points.add(new Point(46.7803825, 6.74700333, 488));
        points.add(new Point(46.78034217, 6.747061, 488));
        points.add(new Point(46.78030317, 6.74712233, 488));
        points.add(new Point(46.7802675, 6.74718717, 488));
        points.add(new Point(46.7802365, 6.7472565, 489));
        points.add(new Point(46.78020983, 6.74732567, 489));
        points.add(new Point(46.78018467, 6.7473935, 489));
        points.add(new Point(46.78016017, 6.74746, 490));
        points.add(new Point(46.78013733, 6.74752417, 490));
        points.add(new Point(46.78011567, 6.747586, 490));
        points.add(new Point(46.78009317, 6.74764567, 491));
        points.add(new Point(46.78006883, 6.747701, 491));
        points.add(new Point(46.78004567, 6.74775567, 492));
        points.add(new Point(46.78002333, 6.747809, 492));
        points.add(new Point(46.78000283, 6.74786183, 492));
        points.add(new Point(46.77998183, 6.7479115, 493));
        points.add(new Point(46.77996183, 6.74795983, 493));
        points.add(new Point(46.77994167, 6.748007, 493));
        points.add(new Point(46.77992217, 6.7480525, 493));
        points.add(new Point(46.77990317, 6.74809667, 494));
        points.add(new Point(46.779885, 6.748143, 494));
        points.add(new Point(46.77986767, 6.74819633, 493));
        points.add(new Point(46.77985033, 6.74825167, 493));
        points.add(new Point(46.7798375, 6.74831233, 491));
        points.add(new Point(46.77983083, 6.74837683, 490));
        points.add(new Point(46.7798345, 6.74845283, 488));
        points.add(new Point(46.7798455, 6.7485315, 486));
        points.add(new Point(46.7798555, 6.74860567, 485));
        points.add(new Point(46.7798625, 6.74867267, 484));
        points.add(new Point(46.77986433, 6.74873567, 484));
        points.add(new Point(46.7798645, 6.74879683, 484));
        points.add(new Point(46.77986217, 6.74885467, 484));
        points.add(new Point(46.77985683, 6.74890867, 484));
        points.add(new Point(46.77984917, 6.7489595, 484));
        points.add(new Point(46.77983933, 6.7490085, 483));
        points.add(new Point(46.77983083, 6.749058, 482));
        points.add(new Point(46.779824, 6.74910883, 482));
        points.add(new Point(46.77982, 6.74916067, 481));
        points.add(new Point(46.77981717, 6.74921183, 481));
        points.add(new Point(46.77981383, 6.74926167, 481));
        points.add(new Point(46.77980767, 6.74930967, 481));
        points.add(new Point(46.77979883, 6.74935667, 481));
        points.add(new Point(46.77978883, 6.749403, 481));
        points.add(new Point(46.77977933, 6.74944967, 481));
        points.add(new Point(46.77976767, 6.74949233, 481));
        points.add(new Point(46.77975483, 6.74953067, 481));
        points.add(new Point(46.779741, 6.74956367, 481));
        points.add(new Point(46.77973, 6.7495995, 479));
        points.add(new Point(46.7797225, 6.74964, 479));
        points.add(new Point(46.77971617, 6.74968283, 479));
        points.add(new Point(46.779711, 6.74972533, 479));
        points.add(new Point(46.77970983, 6.74976683, 479));
        points.add(new Point(46.7797145, 6.7498095, 478));
        points.add(new Point(46.77972483, 6.749851, 479));
        points.add(new Point(46.77973517, 6.749891, 478));
        points.add(new Point(46.77974717, 6.7499295, 478));
        points.add(new Point(46.77975883, 6.74996517, 478));
        points.add(new Point(46.77977117, 6.74999767, 478));
        points.add(new Point(46.77978617, 6.75002783, 478));
        points.add(new Point(46.77980583, 6.75005667, 478));
        points.add(new Point(46.779829, 6.75008583, 478));
        points.add(new Point(46.77985433, 6.75011683, 478));
        points.add(new Point(46.77988067, 6.75015167, 478));
        points.add(new Point(46.77990733, 6.75018733, 479));
        points.add(new Point(46.77993, 6.75022483, 478));
        points.add(new Point(46.77994567, 6.75026133, 478));
        points.add(new Point(46.779958, 6.75029883, 478));
        points.add(new Point(46.77997783, 6.7503415, 478));
        points.add(new Point(46.78000033, 6.75038817, 478));
        points.add(new Point(46.78002317, 6.75043917, 478));
        points.add(new Point(46.78004017, 6.75049, 478));
        points.add(new Point(46.780057, 6.75054267, 477));
        points.add(new Point(46.78007467, 6.7505955, 477));
        points.add(new Point(46.78009017, 6.7506465, 476));
        points.add(new Point(46.78010233, 6.75069633, 476));
        points.add(new Point(46.7801115, 6.7507455, 476));
        points.add(new Point(46.780118, 6.75079217, 475));
        points.add(new Point(46.7801245, 6.750837, 475));
        points.add(new Point(46.780131, 6.75087917, 474));
        points.add(new Point(46.78013583, 6.75092183, 474));
        points.add(new Point(46.780139, 6.75096467, 474));
        points.add(new Point(46.78013817, 6.75100533, 475));
        points.add(new Point(46.78013467, 6.7510455, 475));
        points.add(new Point(46.78013, 6.7510835, 475));
        points.add(new Point(46.78011017, 6.75113383, 479));
        points.add(new Point(46.78008083, 6.75118617, 479));
        points.add(new Point(46.78004433, 6.7512395, 479));
        points.add(new Point(46.78001717, 6.75128417, 478));
        points.add(new Point(46.77999267, 6.75132783, 478));
        points.add(new Point(46.7799535, 6.75138833, 484));
        points.add(new Point(46.77990617, 6.75146383, 487));
        points.add(new Point(46.779853, 6.75154983, 491));
        points.add(new Point(46.7798055, 6.75162683, 494));
        points.add(new Point(46.77975567, 6.75170033, 496));
        points.add(new Point(46.77970383, 6.751765, 498));
        points.add(new Point(46.77965367, 6.75182467, 499));
        points.add(new Point(46.77960817, 6.75187367, 500));
        points.add(new Point(46.77956433, 6.75192233, 502));
        points.add(new Point(46.77952333, 6.751973, 503));
        points.add(new Point(46.779484, 6.75202333, 505));
        points.add(new Point(46.77944817, 6.7520715, 507));
        points.add(new Point(46.7794145, 6.75211683, 508));
        points.add(new Point(46.779383, 6.7521585, 509));
        points.add(new Point(46.779351, 6.7521995, 511));
        points.add(new Point(46.779314, 6.75224183, 511));
        points.add(new Point(46.77927367, 6.7522945, 512));
        points.add(new Point(46.7792325, 6.752355, 512));
        points.add(new Point(46.779193, 6.75242117, 513));
        points.add(new Point(46.77915383, 6.75248767, 513));
        points.add(new Point(46.77911667, 6.75255683, 513));
        points.add(new Point(46.77908167, 6.75262483, 513));
        points.add(new Point(46.77905167, 6.75268383, 515));
        points.add(new Point(46.77902517, 6.75273333, 516));
        points.add(new Point(46.77900333, 6.75277617, 517));
        points.add(new Point(46.77898983, 6.75282383, 517));
        points.add(new Point(46.77897683, 6.75287, 517));
        points.add(new Point(46.7789675, 6.7529185, 518));
        points.add(new Point(46.7789535, 6.75296683, 519));
        points.add(new Point(46.77893817, 6.75302267, 520));
        points.add(new Point(46.77892467, 6.7530855, 522));
        points.add(new Point(46.7789155, 6.75315333, 525));
        points.add(new Point(46.77891683, 6.75322567, 528));
        points.add(new Point(46.7789195, 6.75329567, 529));
        points.add(new Point(46.77891983, 6.75336767, 530));
        points.add(new Point(46.77891333, 6.75343683, 533));
        points.add(new Point(46.77890483, 6.75350333, 535));
        points.add(new Point(46.77889183, 6.75356233, 536));
        points.add(new Point(46.77887717, 6.75361583, 537));
        points.add(new Point(46.77886, 6.75367133, 538));
        points.add(new Point(46.77884683, 6.75372233, 537));
        points.add(new Point(46.77883967, 6.75377783, 536));
        points.add(new Point(46.77884033, 6.75384767, 531));
        points.add(new Point(46.77884417, 6.7539335, 528));
        points.add(new Point(46.7788475, 6.75402033, 525));
        points.add(new Point(46.77884667, 6.75409083, 524));
        points.add(new Point(46.77884633, 6.75416283, 523));
        points.add(new Point(46.77885283, 6.7542465, 521));
        points.add(new Point(46.77886033, 6.75433517, 521));
        points.add(new Point(46.778864, 6.7544115, 522));
        points.add(new Point(46.77885983, 6.7544735, 521));
        points.add(new Point(46.778851, 6.754529, 521));
        points.add(new Point(46.77883817, 6.75458067, 519));
        points.add(new Point(46.778823, 6.75462733, 520));
        points.add(new Point(46.77880767, 6.75467, 519));
        points.add(new Point(46.77879333, 6.75471167, 518));
        points.add(new Point(46.77878033, 6.75475567, 518));
        points.add(new Point(46.77876683, 6.754801, 518));
        points.add(new Point(46.7787525, 6.75484517, 517));
        points.add(new Point(46.77873817, 6.75488617, 518));
        points.add(new Point(46.77872717, 6.75492683, 519));
        points.add(new Point(46.77871617, 6.75496633, 519));
        points.add(new Point(46.77870267, 6.75500683, 521));
        points.add(new Point(46.77868283, 6.75504667, 521));
        points.add(new Point(46.77866083, 6.75508767, 520));
        points.add(new Point(46.7786405, 6.7551275, 521));
        points.add(new Point(46.778623, 6.75516133, 519));
        points.add(new Point(46.77860483, 6.75518383, 517));
        points.add(new Point(46.778586, 6.7551985, 519));
        points.add(new Point(46.77857133, 6.75521033, 520));
        points.add(new Point(46.77855983, 6.75522967, 519));
        points.add(new Point(46.77853367, 6.75525, 520));
        points.add(new Point(46.778498, 6.75527717, 520));
        points.add(new Point(46.77845867, 6.75530517, 519));
        points.add(new Point(46.77842817, 6.75533683, 521));
        points.add(new Point(46.77840083, 6.755369, 523));
        points.add(new Point(46.77837583, 6.75540583, 525));
        points.add(new Point(46.7783555, 6.755447, 526));
        points.add(new Point(46.778337, 6.7554875, 528));
        points.add(new Point(46.77832033, 6.75552233, 529));
        points.add(new Point(46.77830667, 6.75555417, 529));
        points.add(new Point(46.77829233, 6.75558533, 530));
        points.add(new Point(46.77827783, 6.75561333, 530));
        points.add(new Point(46.77826217, 6.75563833, 530));
        points.add(new Point(46.778248, 6.75565817, 530));
        points.add(new Point(46.778232, 6.75567833, 529));
        points.add(new Point(46.77821367, 6.755701, 530));
        points.add(new Point(46.77819467, 6.75572317, 530));
        points.add(new Point(46.77817783, 6.75574283, 530));
        points.add(new Point(46.778162, 6.75575333, 530));
        points.add(new Point(46.7781435, 6.75576117, 528));
        points.add(new Point(46.778118, 6.75575933, 526));
        points.add(new Point(46.77808617, 6.75575333, 524));
        points.add(new Point(46.77805833, 6.755744, 524));
        points.add(new Point(46.77803683, 6.75573983, 523));
        points.add(new Point(46.77801817, 6.75573667, 522));
        points.add(new Point(46.77799183, 6.755725, 521));
        points.add(new Point(46.77796383, 6.75571483, 519));
        points.add(new Point(46.777935, 6.75569833, 519));
        points.add(new Point(46.77791, 6.75568667, 518));
        points.add(new Point(46.77788517, 6.75567417, 517));
        points.add(new Point(46.7778615, 6.75566933, 517));
        points.add(new Point(46.77783667, 6.75566517, 517));
        points.add(new Point(46.77781067, 6.7556585, 517));
        points.add(new Point(46.77778417, 6.75565, 518));
        points.add(new Point(46.77775783, 6.7556445, 519));
        points.add(new Point(46.777728, 6.7556415, 521));
        points.add(new Point(46.77769333, 6.75564283, 520));
        points.add(new Point(46.77765117, 6.75564083, 519));
        points.add(new Point(46.7776065, 6.755637, 517));
        points.add(new Point(46.77756483, 6.75562633, 517));
        points.add(new Point(46.777528, 6.7556165, 517));
        points.add(new Point(46.77749567, 6.75560467, 516));
        points.add(new Point(46.77746067, 6.75559383, 515));
        points.add(new Point(46.77742633, 6.75558067, 514));
        points.add(new Point(46.77739117, 6.75556717, 513));
        points.add(new Point(46.77735817, 6.75555017, 513));
        points.add(new Point(46.77732617, 6.7555325, 512));
        points.add(new Point(46.77729383, 6.75551217, 511));
        points.add(new Point(46.7772595, 6.75549017, 511));
        points.add(new Point(46.77722233, 6.75546667, 512));
        points.add(new Point(46.777184, 6.75544417, 511));
        points.add(new Point(46.777144, 6.755426, 512));
        points.add(new Point(46.77710367, 6.75541133, 511));
        points.add(new Point(46.777062, 6.75539783, 511));
        points.add(new Point(46.777021, 6.7553845, 510));
        points.add(new Point(46.77698133, 6.75537283, 509));
        points.add(new Point(46.77694283, 6.75536067, 509));
        points.add(new Point(46.7769055, 6.75534717, 509));
        points.add(new Point(46.7768685, 6.75533383, 508));
        points.add(new Point(46.776834, 6.7553215, 507));
        points.add(new Point(46.7768015, 6.75530983, 505));
        points.add(new Point(46.77676883, 6.75529483, 505));
        points.add(new Point(46.77673483, 6.75527883, 505));
        points.add(new Point(46.77669933, 6.75526417, 506));
        points.add(new Point(46.77666417, 6.75524567, 507));
        points.add(new Point(46.7766315, 6.755227, 506));
        points.add(new Point(46.77660117, 6.75520333, 506));
        points.add(new Point(46.77657283, 6.75518, 507));
        points.add(new Point(46.77654433, 6.75515383, 508));
        points.add(new Point(46.77651567, 6.75512533, 510));
        points.add(new Point(46.776488, 6.75509733, 511));
        points.add(new Point(46.77646217, 6.7550695, 512));
        points.add(new Point(46.77643767, 6.75504633, 512));
        points.add(new Point(46.7764145, 6.75502383, 512));
        points.add(new Point(46.77638817, 6.755006, 513));
        points.add(new Point(46.77635983, 6.75499133, 513));
        points.add(new Point(46.77632417, 6.7549875, 514));
        points.add(new Point(46.7762885, 6.754989, 516));
        points.add(new Point(46.77625233, 6.75499433, 518));
        points.add(new Point(46.77622067, 6.75499717, 518));
        points.add(new Point(46.77619083, 6.7549975, 519));
        points.add(new Point(46.7761615, 6.7549935, 520));
        points.add(new Point(46.7761325, 6.754986, 521));
        points.add(new Point(46.77610617, 6.75497767, 524));
        points.add(new Point(46.7760825, 6.7549655, 525));
        points.add(new Point(46.77606033, 6.75495517, 525));
        points.add(new Point(46.77603967, 6.754946, 526));
        points.add(new Point(46.77602217, 6.75493967, 527));
        points.add(new Point(46.77600533, 6.75493233, 528));
        points.add(new Point(46.775986, 6.75492683, 528));
        points.add(new Point(46.77596267, 6.75492133, 529));
        points.add(new Point(46.77593817, 6.7549145, 528));
        points.add(new Point(46.77590817, 6.75489833, 529));
        points.add(new Point(46.775875, 6.75487767, 530));
        points.add(new Point(46.775844, 6.7548575, 531));
        points.add(new Point(46.77581933, 6.75484633, 532));
        points.add(new Point(46.77580167, 6.75483817, 532));
        points.add(new Point(46.77578617, 6.754828, 533));
        points.add(new Point(46.77577167, 6.754815, 534));
        points.add(new Point(46.77575667, 6.7548005, 535));
        points.add(new Point(46.77573883, 6.754786, 535));
        points.add(new Point(46.775716, 6.75477333, 535));
        points.add(new Point(46.77568983, 6.7547605, 536));
        points.add(new Point(46.77566133, 6.75474717, 536));
        points.add(new Point(46.77563017, 6.7547195, 534));
        points.add(new Point(46.77559583, 6.7546905, 533));
        points.add(new Point(46.77555867, 6.75465967, 533));
        points.add(new Point(46.775523, 6.75463833, 533));
        points.add(new Point(46.77548633, 6.75462217, 532));
        points.add(new Point(46.77545267, 6.75461367, 533));
        points.add(new Point(46.775423, 6.75460783, 533));
        points.add(new Point(46.77539933, 6.754599, 534));
        points.add(new Point(46.77537667, 6.75458167, 536));
        points.add(new Point(46.77535567, 6.75455817, 537));
        points.add(new Point(46.775333, 6.754533, 539));
        points.add(new Point(46.77530867, 6.754515, 539));
        points.add(new Point(46.77528533, 6.75449817, 539));
        points.add(new Point(46.77526417, 6.75448483, 540));
        points.add(new Point(46.775243, 6.75446617, 540));
        points.add(new Point(46.77521783, 6.75445667, 541));
        points.add(new Point(46.7751905, 6.754449, 542));
        points.add(new Point(46.775169, 6.754448, 542));
        points.add(new Point(46.7751565, 6.75444017, 543));
        points.add(new Point(46.77514967, 6.75443167, 545));
        points.add(new Point(46.77514417, 6.754419, 547));
        points.add(new Point(46.77513617, 6.75440683, 548));
        points.add(new Point(46.775126, 6.7543945, 550));
        points.add(new Point(46.77511367, 6.75438817, 551));
        points.add(new Point(46.7751005, 6.75438467, 552));
        points.add(new Point(46.7750885, 6.75438083, 553));
        points.add(new Point(46.77507967, 6.75437533, 554));
        points.add(new Point(46.775073, 6.7543695, 556));
        points.add(new Point(46.77506767, 6.7543665, 556));
        points.add(new Point(46.77506167, 6.754364, 557));
        points.add(new Point(46.7750545, 6.75436167, 557));
        points.add(new Point(46.77504617, 6.754359, 558));
        points.add(new Point(46.7750385, 6.75435717, 559));
        points.add(new Point(46.77502967, 6.75435783, 559));
        points.add(new Point(46.775023, 6.754357, 561));
        points.add(new Point(46.77501633, 6.75435583, 562));
        points.add(new Point(46.775013, 6.75435067, 563));
        points.add(new Point(46.77501033, 6.75434633, 564));
        points.add(new Point(46.77500767, 6.7543415, 565));
        points.add(new Point(46.77500433, 6.75433717, 566));
        points.add(new Point(46.77500167, 6.75433233, 567));
        points.add(new Point(46.774997, 6.75432917, 568));
        points.add(new Point(46.774988, 6.75432483, 569));
        points.add(new Point(46.77497417, 6.7543205, 570));
        points.add(new Point(46.77495817, 6.7543165, 571));
        points.add(new Point(46.77494433, 6.7543155, 572));
        points.add(new Point(46.77493167, 6.75431717, 573));
        points.add(new Point(46.7749235, 6.754314, 574));
        points.add(new Point(46.7749055, 6.75432133, 575));
        points.add(new Point(46.774886, 6.7543345, 577));
        points.add(new Point(46.77486417, 6.75435267, 578));
        points.add(new Point(46.7748515, 6.75436367, 580));
        points.add(new Point(46.77484167, 6.7543685, 581));
        points.add(new Point(46.774831, 6.754376, 582));
        points.add(new Point(46.77482017, 6.75437917, 583));
        points.add(new Point(46.77480167, 6.75438567, 585));
        points.add(new Point(46.77478083, 6.75439333, 586));
        points.add(new Point(46.77475183, 6.7544065, 588));
        points.add(new Point(46.774723, 6.754423, 589));
        points.add(new Point(46.77469617, 6.7544375, 590));
        points.add(new Point(46.77467367, 6.7544545, 591));
        points.add(new Point(46.774651, 6.75447333, 592));
        points.add(new Point(46.77462567, 6.75449267, 594));
        points.add(new Point(46.77460617, 6.75450667, 595));
        points.add(new Point(46.77459367, 6.75451167, 596));
        points.add(new Point(46.77458633, 6.7545125, 597));
        points.add(new Point(46.7745805, 6.754512, 598));
        points.add(new Point(46.77457917, 6.75451283, 599));
        points.add(new Point(46.774579, 6.75451683, 600));
        points.add(new Point(46.774578, 6.75452233, 601));
        points.add(new Point(46.77457017, 6.754527, 603));
        points.add(new Point(46.7745595, 6.75452933, 604));
        points.add(new Point(46.77454883, 6.75453383, 605));
        points.add(new Point(46.77454117, 6.75454083, 606));
        points.add(new Point(46.77453567, 6.75454867, 607));
        points.add(new Point(46.7745285, 6.75455333, 608));
        points.add(new Point(46.77451767, 6.754551, 609));
        points.add(new Point(46.77450633, 6.754548, 610));
        points.add(new Point(46.77449667, 6.75455067, 611));
        points.add(new Point(46.77448983, 6.75456183, 611));
        points.add(new Point(46.77448283, 6.7545795, 611));
        points.add(new Point(46.774478, 6.75459767, 610));
        points.add(new Point(46.774474, 6.75461717, 609));
        points.add(new Point(46.7744665, 6.75463, 610));
        points.add(new Point(46.77445817, 6.75463967, 610));
        points.add(new Point(46.77444883, 6.75464767, 610));
        points.add(new Point(46.774443, 6.75466, 610));
        points.add(new Point(46.77443783, 6.75467333, 609));
        points.add(new Point(46.77443567, 6.754685, 608));
        points.add(new Point(46.77443417, 6.75468867, 609));
        points.add(new Point(46.774432, 6.75468617, 609));
        points.add(new Point(46.77442967, 6.75468083, 609));
        points.add(new Point(46.774427, 6.75468067, 609));
        points.add(new Point(46.774427, 6.75467933, 609));
        points.add(new Point(46.77442817, 6.75467833, 608));
        points.add(new Point(46.77443067, 6.75468017, 608));
        points.add(new Point(46.774429, 6.75468967, 608));
        points.add(new Point(46.7744245, 6.754704, 607));
        points.add(new Point(46.77441467, 6.754717, 607));
        points.add(new Point(46.77440283, 6.75473283, 606));
        points.add(new Point(46.77438083, 6.75475433, 606));
        points.add(new Point(46.77435817, 6.754781, 605));
        points.add(new Point(46.77433517, 6.75481, 605));
        points.add(new Point(46.77431733, 6.7548375, 605));
        points.add(new Point(46.774299, 6.75486717, 606));
        points.add(new Point(46.77427833, 6.75489717, 606));
        points.add(new Point(46.77425767, 6.75492683, 606));
        points.add(new Point(46.77423817, 6.75495517, 606));
        points.add(new Point(46.7742205, 6.754983, 606));
        points.add(new Point(46.774204, 6.75500667, 606));
        points.add(new Point(46.774186, 6.75502967, 606));
        points.add(new Point(46.77416667, 6.75504917, 606));
        points.add(new Point(46.7741455, 6.75507333, 606));
        points.add(new Point(46.77411783, 6.75510117, 606));
        points.add(new Point(46.77408467, 6.75513383, 606));
        points.add(new Point(46.77405033, 6.755171, 606));
        points.add(new Point(46.774028, 6.755211, 607));
        points.add(new Point(46.77401467, 6.7552495, 608));
        points.add(new Point(46.77401117, 6.75528283, 609));
        points.add(new Point(46.774006, 6.75530833, 610));
        points.add(new Point(46.7740055, 6.75533233, 610));
        points.add(new Point(46.77400533, 6.75535367, 611));
        points.add(new Point(46.77400917, 6.7553735, 611));
        points.add(new Point(46.7740075, 6.75539383, 612));
        points.add(new Point(46.77399617, 6.75541267, 612));
        points.add(new Point(46.77397483, 6.75542733, 613));
        points.add(new Point(46.77395217, 6.7554365, 613));
        points.add(new Point(46.77393133, 6.7554435, 613));
        points.add(new Point(46.773918, 6.755454, 614));
        points.add(new Point(46.77390733, 6.7554665, 614));
        points.add(new Point(46.773902, 6.75548217, 615));
        points.add(new Point(46.77389517, 6.7554965, 616));
        points.add(new Point(46.773887, 6.75550967, 616));
        points.add(new Point(46.77387867, 6.75551867, 617));
        points.add(new Point(46.773872, 6.75552567, 617));
        points.add(new Point(46.77386733, 6.75553367, 618));
        points.add(new Point(46.773862, 6.75554367, 618));
        points.add(new Point(46.77385533, 6.75555183, 618));
        points.add(new Point(46.77384733, 6.75555717, 619));
        points.add(new Point(46.77384133, 6.75555833, 619));
        points.add(new Point(46.77383617, 6.75556183, 619));
        points.add(new Point(46.77382983, 6.75556467, 620));
        points.add(new Point(46.773818, 6.75556867, 619));
        points.add(new Point(46.7738025, 6.75557033, 619));
        points.add(new Point(46.77378633, 6.75557167, 619));
        points.add(new Point(46.773774, 6.7555735, 619));
        points.add(new Point(46.7737635, 6.7555765, 619));
        points.add(new Point(46.77375483, 6.75558183, 619));
        points.add(new Point(46.77374533, 6.75558683, 620));
        points.add(new Point(46.77373767, 6.7555905, 620));
        points.add(new Point(46.7737275, 6.7555955, 621));
        points.add(new Point(46.77371617, 6.75560333, 621));
        points.add(new Point(46.77370067, 6.75561567, 620));
        points.add(new Point(46.773688, 6.75562917, 619));
        points.add(new Point(46.77367533, 6.75564433, 619));
        points.add(new Point(46.773666, 6.75565983, 618));
        points.add(new Point(46.77365767, 6.75567417, 618));
        points.add(new Point(46.77364283, 6.7556915, 618));
        points.add(new Point(46.773627, 6.75571033, 617));
        points.add(new Point(46.77360833, 6.75572983, 617));
        points.add(new Point(46.77359317, 6.755745, 617));
        points.add(new Point(46.773581, 6.75575883, 617));
        points.add(new Point(46.7735695, 6.75577117, 616));
        points.add(new Point(46.773558, 6.75578517, 616));
        points.add(new Point(46.77354333, 6.75579933, 615));
        points.add(new Point(46.7735275, 6.75581617, 615));
        points.add(new Point(46.77351217, 6.75583083, 614));
        points.add(new Point(46.77350017, 6.75584517, 615));
        points.add(new Point(46.77349533, 6.75585833, 615));
        points.add(new Point(46.77350483, 6.75586833, 614));
        points.add(new Point(46.773525, 6.75587317, 614));
        points.add(new Point(46.77354633, 6.75587517, 614));
        points.add(new Point(46.7735605, 6.755878, 613));
        points.add(new Point(46.77356567, 6.75588417, 614));
        points.add(new Point(46.7735665, 6.75588883, 614));
        points.add(new Point(46.77356533, 6.7558955, 613));
        points.add(new Point(46.77356483, 6.75590133, 613));
        points.add(new Point(46.77356783, 6.75591017, 613));
        points.add(new Point(46.77356583, 6.75591983, 614));
        points.add(new Point(46.77356017, 6.75592983, 613));
        points.add(new Point(46.77355233, 6.75594, 613));
        points.add(new Point(46.7735455, 6.75594583, 612));
        points.add(new Point(46.77353583, 6.75595383, 611));
        points.add(new Point(46.77352133, 6.7559615, 611));
        points.add(new Point(46.77350617, 6.75597433, 610));
        points.add(new Point(46.77349133, 6.75598467, 610));
        points.add(new Point(46.77347583, 6.75599683, 610));
        points.add(new Point(46.773457, 6.75600617, 608));
        points.add(new Point(46.77343983, 6.75601517, 608));
        points.add(new Point(46.77342267, 6.75601983, 607));
        points.add(new Point(46.77340983, 6.75602017, 606));
        points.add(new Point(46.77340033, 6.75601633, 607));
        points.add(new Point(46.77339617, 6.75600833, 607));
        points.add(new Point(46.77339617, 6.75599617, 605));
        points.add(new Point(46.7733985, 6.75598167, 604));
        points.add(new Point(46.7734005, 6.75596717, 602));
        points.add(new Point(46.77340017, 6.75595633, 600));
        points.add(new Point(46.7733975, 6.75595, 600));
        points.add(new Point(46.77339383, 6.75594583, 600));
        points.add(new Point(46.77339133, 6.7559425, 600));
        points.add(new Point(46.77338833, 6.755937, 600));
        points.add(new Point(46.77338283, 6.75592983, 599));
        points.add(new Point(46.77337333, 6.7559195, 598));
        points.add(new Point(46.7733615, 6.755908, 597));
        points.add(new Point(46.773352, 6.75589833, 596));
        points.add(new Point(46.773348, 6.75589217, 598));
        points.add(new Point(46.773347, 6.75588917, 597));
        points.add(new Point(46.77334383, 6.75588567, 597));
        points.add(new Point(46.77333983, 6.75588117, 596));
        points.add(new Point(46.77333867, 6.75587667, 597));
        points.add(new Point(46.77334367, 6.75587267, 597));
        points.add(new Point(46.77335433, 6.75586983, 597));
        points.add(new Point(46.77336533, 6.75586683, 596));
        points.add(new Point(46.77337583, 6.75586283, 596));
        points.add(new Point(46.77338067, 6.7558595, 596));
        points.add(new Point(46.773386, 6.75586117, 596));
        points.add(new Point(46.77339133, 6.75586733, 595));
        points.add(new Point(46.77339867, 6.75587533, 595));
        points.add(new Point(46.7734065, 6.75588183, 596));
        points.add(new Point(46.77341633, 6.75588867, 597));
        points.add(new Point(46.773427, 6.755894, 598));
        points.add(new Point(46.77343633, 6.75589633, 598));
        points.add(new Point(46.77344517, 6.75589567, 600));
        points.add(new Point(46.77345233, 6.75589533, 601));
        points.add(new Point(46.773456, 6.75589617, 601));
        points.add(new Point(46.7734585, 6.755897, 602));
        points.add(new Point(46.77345583, 6.75589733, 602));
        points.add(new Point(46.77345283, 6.75589667, 602));
        points.add(new Point(46.773448, 6.7558965, 602));
        points.add(new Point(46.773447, 6.75589667, 602));
        points.add(new Point(46.7734475, 6.7558965, 602));
        points.add(new Point(46.773449, 6.75589717, 603));
        points.add(new Point(46.77345133, 6.75589817, 603));
        points.add(new Point(46.77345217, 6.7559005, 604));
        points.add(new Point(46.77344983, 6.7559015, 604));
        points.add(new Point(46.77344583, 6.75590267, 604));
        points.add(new Point(46.77344267, 6.75590367, 605));
        points.add(new Point(46.773437, 6.75590767, 604));
        points.add(new Point(46.77342817, 6.755914, 603));
        points.add(new Point(46.77341617, 6.755922, 603));
        points.add(new Point(46.77340517, 6.755929, 604));
        points.add(new Point(46.7733955, 6.75593, 604));
        points.add(new Point(46.77338517, 6.7559225, 603));
        points.add(new Point(46.7733775, 6.75591117, 604));
        points.add(new Point(46.773372, 6.75590167, 605));
        points.add(new Point(46.77337083, 6.75589867, 605));
        points.add(new Point(46.773369, 6.75589767, 605));
        points.add(new Point(46.77336733, 6.75589683, 605));
        points.add(new Point(46.77336367, 6.755895, 605));
        points.add(new Point(46.77336217, 6.75589133, 606));
        points.add(new Point(46.7733605, 6.75588517, 606));
        points.add(new Point(46.773362, 6.755873, 604));
        points.add(new Point(46.77335967, 6.75585667, 604));
        points.add(new Point(46.77335817, 6.75583883, 603));
        points.add(new Point(46.7733555, 6.75582283, 604));
        points.add(new Point(46.77335667, 6.75581, 605));
        points.add(new Point(46.77335567, 6.75579967, 605));
        points.add(new Point(46.77335467, 6.7557915, 606));
        points.add(new Point(46.77334833, 6.75578483, 605));
        points.add(new Point(46.77333717, 6.7557795, 605));
        points.add(new Point(46.77332167, 6.7557745, 603));
        points.add(new Point(46.7733065, 6.75577167, 602));
        points.add(new Point(46.77328817, 6.755771, 600));
        points.add(new Point(46.7732695, 6.755768, 599));
        points.add(new Point(46.77325567, 6.7557625, 601));
        points.add(new Point(46.77325067, 6.75575183, 601));
        points.add(new Point(46.77325183, 6.75574183, 601));
        points.add(new Point(46.77325433, 6.75572867, 601));
        points.add(new Point(46.77325683, 6.75571433, 600));
        points.add(new Point(46.77325783, 6.75570017, 600));
        points.add(new Point(46.77325617, 6.75568933, 600));
        points.add(new Point(46.7732495, 6.75568217, 599));
        points.add(new Point(46.7732425, 6.7556795, 598));
        points.add(new Point(46.77323217, 6.75568183, 598));
        points.add(new Point(46.77322467, 6.75568883, 599));
        points.add(new Point(46.77321467, 6.755697, 599));
        points.add(new Point(46.77320583, 6.75570333, 599));
        points.add(new Point(46.7731955, 6.75570817, 599));
        points.add(new Point(46.77319, 6.75570933, 598));
        points.add(new Point(46.77318417, 6.7557105, 598));
        points.add(new Point(46.77318, 6.755711, 598));
        points.add(new Point(46.773169, 6.75571617, 598));
        points.add(new Point(46.77316067, 6.75572383, 599));
        points.add(new Point(46.77315183, 6.75573233, 598));
        points.add(new Point(46.77314617, 6.755735, 599));
        points.add(new Point(46.77314267, 6.75573417, 598));
        points.add(new Point(46.7731435, 6.7557335, 598));
        points.add(new Point(46.77314733, 6.755737, 598));
        points.add(new Point(46.77315083, 6.75574167, 598));
        points.add(new Point(46.773153, 6.7557465, 598));
        points.add(new Point(46.77315483, 6.75575033, 599));
        points.add(new Point(46.77315583, 6.755753, 599));
        points.add(new Point(46.77315633, 6.7557555, 600));
        points.add(new Point(46.773155, 6.75575683, 599));
        points.add(new Point(46.77315083, 6.75575833, 599));
        points.add(new Point(46.77314533, 6.75575933, 599));
        points.add(new Point(46.77314067, 6.7557645, 600));
        points.add(new Point(46.77313733, 6.75577117, 600));
        points.add(new Point(46.77313233, 6.75578017, 601));
        points.add(new Point(46.77312533, 6.75578817, 602));
        points.add(new Point(46.77311833, 6.75579667, 602));
        points.add(new Point(46.7731115, 6.755804, 603));
        points.add(new Point(46.7731035, 6.75581083, 602));
        points.add(new Point(46.77309433, 6.755816, 603));
        points.add(new Point(46.77308333, 6.7558195, 603));
        points.add(new Point(46.773072, 6.755821, 603));
        points.add(new Point(46.77306033, 6.755823, 604));
        points.add(new Point(46.77304817, 6.75582383, 603));
        points.add(new Point(46.7730345, 6.75582567, 603));
        points.add(new Point(46.7730185, 6.7558265, 602));
        points.add(new Point(46.7730045, 6.75582783, 602));
        points.add(new Point(46.77299267, 6.75582917, 601));
        points.add(new Point(46.77298017, 6.75582917, 600));
        points.add(new Point(46.77296417, 6.75582583, 598));
        points.add(new Point(46.77295017, 6.75582133, 598));
        points.add(new Point(46.77293883, 6.75581733, 598));
        points.add(new Point(46.77292883, 6.755815, 598));
        points.add(new Point(46.77291367, 6.75580933, 596));
        points.add(new Point(46.7728975, 6.75580217, 596));
        points.add(new Point(46.7728845, 6.7557945, 596));
        points.add(new Point(46.77287433, 6.75578817, 596));
        points.add(new Point(46.7728655, 6.75578183, 597));
        points.add(new Point(46.77285583, 6.755777, 597));
        points.add(new Point(46.77284767, 6.75577333, 597));
        points.add(new Point(46.77283867, 6.75577117, 597));
        points.add(new Point(46.77283033, 6.75576817, 597));
        points.add(new Point(46.772821, 6.755765, 598));
        points.add(new Point(46.77281183, 6.75576, 598));
        points.add(new Point(46.77280217, 6.75575367, 597));
        points.add(new Point(46.77279017, 6.75574517, 595));
        points.add(new Point(46.77278067, 6.75573883, 595));
        points.add(new Point(46.7727695, 6.7557305, 593));
        points.add(new Point(46.77275983, 6.755723, 591));
        points.add(new Point(46.77274417, 6.75571017, 589));
        points.add(new Point(46.77273033, 6.75570067, 588));
        points.add(new Point(46.77271917, 6.75569317, 589));
        points.add(new Point(46.77271083, 6.75569017, 590));
        points.add(new Point(46.77270167, 6.75568617, 590));
        points.add(new Point(46.77268933, 6.75568017, 590));
        points.add(new Point(46.77267683, 6.75567317, 590));
        points.add(new Point(46.77266567, 6.75566633, 591));
        points.add(new Point(46.77265583, 6.75566067, 591));
        points.add(new Point(46.77264517, 6.7556545, 591));
        points.add(new Point(46.77262967, 6.75564617, 588));
        points.add(new Point(46.772612, 6.755636, 587));
        points.add(new Point(46.772596, 6.75562533, 586));
        points.add(new Point(46.77258517, 6.75561867, 586));
        points.add(new Point(46.77257767, 6.75561533, 585));
        points.add(new Point(46.7725715, 6.7556145, 585));
        points.add(new Point(46.77256583, 6.7556125, 585));
        points.add(new Point(46.77255917, 6.75560833, 584));
        points.add(new Point(46.77255233, 6.75560267, 583));
        points.add(new Point(46.77254483, 6.7555975, 584));
        points.add(new Point(46.77253783, 6.755593, 585));
        points.add(new Point(46.772532, 6.75558917, 585));
        points.add(new Point(46.77252667, 6.7555865, 586));
        points.add(new Point(46.77252133, 6.75558417, 586));
        points.add(new Point(46.77251567, 6.75558133, 587));
        points.add(new Point(46.77250983, 6.75557883, 588));
        points.add(new Point(46.77250467, 6.75557767, 589));
        points.add(new Point(46.77249817, 6.7555775, 589));
        points.add(new Point(46.772491, 6.75557483, 589));
        points.add(new Point(46.7724845, 6.75556933, 589));
        points.add(new Point(46.77247717, 6.75556183, 589));
        points.add(new Point(46.7724695, 6.75555533, 589));
        points.add(new Point(46.77246133, 6.75554933, 589));
        points.add(new Point(46.7724555, 6.755544, 589));
        points.add(new Point(46.77245167, 6.75553833, 589));
        points.add(new Point(46.772449, 6.755534, 589));
        points.add(new Point(46.77244617, 6.75553117, 589));
        points.add(new Point(46.77244433, 6.755531, 590));
        points.add(new Point(46.77244283, 6.75553117, 590));
        points.add(new Point(46.77244183, 6.75553117, 590));
        points.add(new Point(46.77244033, 6.7555295, 590));
        points.add(new Point(46.77243867, 6.75552717, 589));
        points.add(new Point(46.7724365, 6.75552483, 589));
        points.add(new Point(46.77243417, 6.75552267, 589));
        points.add(new Point(46.77243217, 6.75551983, 588));
        points.add(new Point(46.77243083, 6.75551733, 588));
        points.add(new Point(46.77243017, 6.75551383, 588));
        points.add(new Point(46.77243033, 6.755509, 587));
        points.add(new Point(46.77243133, 6.75550283, 586));
        points.add(new Point(46.772433, 6.7554965, 586));
        points.add(new Point(46.77243367, 6.75549267, 586));
        points.add(new Point(46.77243533, 6.7554885, 586));
        points.add(new Point(46.77243683, 6.75548483, 586));
        points.add(new Point(46.7724395, 6.75548033, 586));
        points.add(new Point(46.7724415, 6.75547717, 586));
        points.add(new Point(46.77244383, 6.75547467, 586));
        points.add(new Point(46.7724455, 6.75547333, 586));
        points.add(new Point(46.77244667, 6.75547283, 586));
        points.add(new Point(46.7724475, 6.755473, 586));
        points.add(new Point(46.77244817, 6.75547383, 586));
        points.add(new Point(46.7724485, 6.75547533, 586));
        points.add(new Point(46.77244817, 6.75547717, 586));
        points.add(new Point(46.772448, 6.755479, 586));
        points.add(new Point(46.77244633, 6.75548017, 586));
        points.add(new Point(46.7724445, 6.755481, 586));
        points.add(new Point(46.77244183, 6.75548183, 586));
        points.add(new Point(46.77244017, 6.75548283, 586));
        points.add(new Point(46.77243783, 6.75548367, 587));
        points.add(new Point(46.772433, 6.75548217, 586));
        points.add(new Point(46.7724265, 6.75547833, 586));
        points.add(new Point(46.77241667, 6.755471, 587));
        points.add(new Point(46.77240617, 6.755464, 587));
        points.add(new Point(46.77239167, 6.75545717, 587));
        points.add(new Point(46.77237683, 6.7554515, 588));
        points.add(new Point(46.77235917, 6.7554435, 588));
        points.add(new Point(46.77234333, 6.75543383, 588));
        points.add(new Point(46.77232917, 6.75542, 589));
        points.add(new Point(46.77231783, 6.75540533, 589));
        points.add(new Point(46.7723075, 6.75538917, 589));
        points.add(new Point(46.7722975, 6.75537517, 590));
        points.add(new Point(46.77228867, 6.75536233, 590));
        points.add(new Point(46.7722795, 6.7553495, 590));
        points.add(new Point(46.77226983, 6.75533517, 590));
        points.add(new Point(46.77225583, 6.75531617, 591));
        points.add(new Point(46.77224283, 6.75529683, 591));
        points.add(new Point(46.77222967, 6.7552765, 592));
        points.add(new Point(46.772219, 6.75525833, 593));
        points.add(new Point(46.77220583, 6.755239, 593));
        points.add(new Point(46.77219217, 6.75522033, 595));
        points.add(new Point(46.77217783, 6.75520217, 595));
        points.add(new Point(46.7721645, 6.755185, 595));
        points.add(new Point(46.77215317, 6.75516933, 596));
        points.add(new Point(46.77214383, 6.7551565, 597));
        points.add(new Point(46.7721355, 6.75514333, 598));
        points.add(new Point(46.77212783, 6.755129, 598));
        points.add(new Point(46.77212067, 6.75511233, 598));
        points.add(new Point(46.77211383, 6.75509367, 600));
        points.add(new Point(46.77210567, 6.75507317, 600));
        points.add(new Point(46.77209617, 6.75504967, 600));
        points.add(new Point(46.77208617, 6.75502567, 600));
        points.add(new Point(46.7720765, 6.7550005, 600));
        points.add(new Point(46.77206683, 6.754976, 600));
        points.add(new Point(46.77205333, 6.75494967, 599));
        points.add(new Point(46.77203867, 6.75492283, 599));
        points.add(new Point(46.77202517, 6.754896, 600));
        points.add(new Point(46.77201483, 6.75487217, 601));
        points.add(new Point(46.77200467, 6.75485133, 602));
        points.add(new Point(46.7719945, 6.75483283, 602));
        points.add(new Point(46.77198483, 6.75481683, 603));
        points.add(new Point(46.771975, 6.75480133, 603));
        points.add(new Point(46.77196533, 6.754787, 603));
        points.add(new Point(46.77195683, 6.75477333, 602));
        points.add(new Point(46.77195167, 6.75476067, 602));
        points.add(new Point(46.77194983, 6.75474733, 603));
        points.add(new Point(46.77194833, 6.75473467, 603));
        points.add(new Point(46.77194533, 6.75472217, 604));
        points.add(new Point(46.77194033, 6.75471183, 604));
        points.add(new Point(46.77193483, 6.75470317, 605));
        points.add(new Point(46.77193, 6.75469417, 605));
        points.add(new Point(46.771925, 6.75468367, 605));
        points.add(new Point(46.77192067, 6.75467167, 605));
        points.add(new Point(46.77191367, 6.75465883, 605));
        points.add(new Point(46.77190683, 6.7546465, 606));
        points.add(new Point(46.77189967, 6.7546325, 606));
        points.add(new Point(46.77189433, 6.75461817, 606));
        points.add(new Point(46.77188867, 6.754601, 607));
        points.add(new Point(46.77188267, 6.7545805, 608));
        points.add(new Point(46.77187583, 6.75455567, 608));
        points.add(new Point(46.77186867, 6.75453067, 608));
        points.add(new Point(46.77186067, 6.7545065, 608));
        points.add(new Point(46.77185517, 6.754485, 608));
        points.add(new Point(46.7718505, 6.75446433, 609));
        points.add(new Point(46.77184783, 6.75444317, 608));
        points.add(new Point(46.77184417, 6.75442233, 608));
        points.add(new Point(46.77183933, 6.754402, 608));
        points.add(new Point(46.77183267, 6.75438233, 608));
        points.add(new Point(46.77182517, 6.75436133, 607));
        points.add(new Point(46.77181883, 6.75433933, 607));
        points.add(new Point(46.771814, 6.754319, 607));
        points.add(new Point(46.771808, 6.75430117, 607));
        points.add(new Point(46.77180133, 6.75428317, 608));
        points.add(new Point(46.77179467, 6.75426217, 608));
        points.add(new Point(46.77179017, 6.75423883, 608));
        points.add(new Point(46.77178783, 6.7542165, 608));
        points.add(new Point(46.77178533, 6.754195, 608));
        points.add(new Point(46.77178283, 6.754175, 607));
        points.add(new Point(46.77177733, 6.75415617, 608));
        points.add(new Point(46.77177117, 6.75413733, 608));
        points.add(new Point(46.77176733, 6.75412, 609));
        points.add(new Point(46.77176583, 6.754102, 609));
        points.add(new Point(46.77176283, 6.75408383, 609));
        points.add(new Point(46.77175667, 6.75406233, 608));
        points.add(new Point(46.77174683, 6.75403883, 607));
        points.add(new Point(46.7717345, 6.75401483, 607));
        points.add(new Point(46.7717195, 6.75399433, 607));
        points.add(new Point(46.77170333, 6.75397467, 606));
        points.add(new Point(46.771687, 6.75395617, 606));
        points.add(new Point(46.77166833, 6.753934, 605));
        points.add(new Point(46.77164717, 6.75390917, 605));
        points.add(new Point(46.77162183, 6.75388183, 606));
        points.add(new Point(46.77159367, 6.75385133, 606));
        points.add(new Point(46.77156117, 6.75381533, 606));
        points.add(new Point(46.77152817, 6.75377483, 605));
        points.add(new Point(46.7714955, 6.753733, 604));
        points.add(new Point(46.7714625, 6.75368633, 603));
        points.add(new Point(46.771429, 6.753638, 602));
        points.add(new Point(46.77138883, 6.7535875, 601));
        points.add(new Point(46.77134617, 6.75353883, 600));
        points.add(new Point(46.77130033, 6.75349183, 599));
        points.add(new Point(46.77125733, 6.75344483, 598));
        points.add(new Point(46.771215, 6.75339817, 599));
        points.add(new Point(46.77117233, 6.7533475, 598));
        points.add(new Point(46.771132, 6.75329633, 598));
        points.add(new Point(46.771091, 6.753246, 599));
        points.add(new Point(46.77104983, 6.7531975, 600));
        points.add(new Point(46.77100433, 6.753147, 599));
        points.add(new Point(46.77095783, 6.753095, 599));
        points.add(new Point(46.77090983, 6.75304317, 599));
        points.add(new Point(46.77086083, 6.752995, 598));
        points.add(new Point(46.77081017, 6.75294883, 598));
        points.add(new Point(46.77075683, 6.75290367, 598));
        points.add(new Point(46.7706985, 6.7528575, 598));
        points.add(new Point(46.77064267, 6.75281017, 598));
        points.add(new Point(46.77059033, 6.75276417, 598));
        points.add(new Point(46.7705455, 6.75271867, 598));
        points.add(new Point(46.7705005, 6.752673, 598));
        points.add(new Point(46.77045533, 6.7526235, 599));
        points.add(new Point(46.770411, 6.75256883, 600));
        points.add(new Point(46.77036833, 6.7525115, 601));
        points.add(new Point(46.7703275, 6.75245283, 602));
        points.add(new Point(46.770288, 6.7523965, 603));
        points.add(new Point(46.77025033, 6.75234167, 603));
        points.add(new Point(46.77021467, 6.75228833, 604));
        points.add(new Point(46.77017983, 6.752237, 604));
        points.add(new Point(46.77014517, 6.75218767, 604));
        points.add(new Point(46.77011117, 6.75213983, 604));
        points.add(new Point(46.7700785, 6.75209333, 604));
        points.add(new Point(46.77004683, 6.75204867, 605));
        points.add(new Point(46.7700155, 6.7520045, 605));
        points.add(new Point(46.769984, 6.75195983, 605));
        points.add(new Point(46.76995217, 6.75191467, 605));
        points.add(new Point(46.76991917, 6.7518705, 606));
        points.add(new Point(46.76988633, 6.75182733, 606));
        points.add(new Point(46.76985417, 6.75178417, 606));
        points.add(new Point(46.76982333, 6.751741, 606));
        points.add(new Point(46.76979283, 6.75169817, 606));
        points.add(new Point(46.76976233, 6.751656, 606));
        points.add(new Point(46.76973267, 6.75161367, 606));
        points.add(new Point(46.76970367, 6.75157167, 607));
        points.add(new Point(46.7696755, 6.75153017, 607));
        points.add(new Point(46.76964717, 6.75148967, 607));
        points.add(new Point(46.76961867, 6.75145033, 607));
        points.add(new Point(46.76958933, 6.75141267, 608));
        points.add(new Point(46.7695595, 6.751376, 608));
        points.add(new Point(46.76952867, 6.75134017, 608));
        points.add(new Point(46.7694965, 6.75130583, 608));
        points.add(new Point(46.76946133, 6.751275, 608));
        points.add(new Point(46.769423, 6.7512465, 608));
        points.add(new Point(46.76938133, 6.7512195, 608));
        points.add(new Point(46.769337, 6.7511925, 609));
        points.add(new Point(46.76929117, 6.75116617, 609));
        points.add(new Point(46.769245, 6.75113983, 609));
        points.add(new Point(46.769199, 6.7511135, 609));
        points.add(new Point(46.769153, 6.751087, 609));
        points.add(new Point(46.7691065, 6.75105983, 609));
        points.add(new Point(46.7690595, 6.75103267, 609));
        points.add(new Point(46.76901117, 6.75100467, 609));
        points.add(new Point(46.76896167, 6.75097633, 609));
        points.add(new Point(46.76891083, 6.75094767, 609));
        points.add(new Point(46.768859, 6.750919, 609));
        points.add(new Point(46.76880667, 6.75089, 609));
        points.add(new Point(46.768754, 6.7508605, 609));
        points.add(new Point(46.768701, 6.75083017, 609));
        points.add(new Point(46.76864733, 6.7507995, 609));
        points.add(new Point(46.76859317, 6.75076917, 609));
        points.add(new Point(46.76853883, 6.7507395, 609));
        points.add(new Point(46.76848433, 6.7507105, 609));
        points.add(new Point(46.7684295, 6.75068183, 609));
        points.add(new Point(46.76837517, 6.75065317, 609));
        points.add(new Point(46.7683215, 6.750624, 609));
        points.add(new Point(46.76826883, 6.75059367, 609));
        points.add(new Point(46.768217, 6.7505625, 609));
        points.add(new Point(46.7681645, 6.75053083, 609));
        points.add(new Point(46.76811183, 6.75049617, 609));
        points.add(new Point(46.76806083, 6.750454, 609));
        points.add(new Point(46.76801183, 6.75040467, 608));
        points.add(new Point(46.7679635, 6.75035283, 609));
        points.add(new Point(46.76791383, 6.75030183, 609));
        points.add(new Point(46.767864, 6.7502505, 609));
        points.add(new Point(46.76781533, 6.75019767, 609));
        points.add(new Point(46.76776733, 6.75014483, 609));
        points.add(new Point(46.76771933, 6.75009433, 609));
        points.add(new Point(46.76767033, 6.75004633, 609));
        points.add(new Point(46.76762183, 6.7499985, 609));
        points.add(new Point(46.76757433, 6.74994933, 609));
        points.add(new Point(46.76752817, 6.7498995, 609));
        points.add(new Point(46.76748283, 6.74985033, 609));
        points.add(new Point(46.76743717, 6.74980317, 609));
        points.add(new Point(46.76739117, 6.7497575, 610));
        points.add(new Point(46.76734467, 6.749713, 610));
        points.add(new Point(46.76729883, 6.7496675, 610));
        points.add(new Point(46.76725383, 6.74962067, 610));
        points.add(new Point(46.76720933, 6.74957333, 610));
        points.add(new Point(46.76716433, 6.74952667, 610));
        points.add(new Point(46.76711817, 6.74948067, 610));
        points.add(new Point(46.767071, 6.74943433, 610));
        points.add(new Point(46.76702267, 6.74938733, 610));
        points.add(new Point(46.76697333, 6.74933833, 609));
        points.add(new Point(46.76692267, 6.74928767, 609));
        points.add(new Point(46.76687083, 6.74923583, 609));
        points.add(new Point(46.76681817, 6.749183, 609));
        points.add(new Point(46.766765, 6.7491285, 609));
        points.add(new Point(46.76671167, 6.74907267, 609));
        points.add(new Point(46.76665817, 6.749016, 609));
        points.add(new Point(46.76660483, 6.74895917, 609));
        points.add(new Point(46.76655167, 6.7489015, 609));
        points.add(new Point(46.766499, 6.748842, 609));
        points.add(new Point(46.76644683, 6.74878, 609));
        points.add(new Point(46.76639583, 6.74871533, 609));
        points.add(new Point(46.766346, 6.74864817, 609));
        points.add(new Point(46.76629817, 6.748578, 608));
        points.add(new Point(46.766252, 6.74850733, 608));
        points.add(new Point(46.76620717, 6.7484375, 608));
        points.add(new Point(46.76616167, 6.74837067, 608));
        points.add(new Point(46.76611583, 6.748305, 608));
        points.add(new Point(46.76606817, 6.74824033, 607));
        points.add(new Point(46.76601983, 6.74817417, 607));
        points.add(new Point(46.7659715, 6.74810583, 607));
        points.add(new Point(46.76592533, 6.74803317, 606));
        points.add(new Point(46.76588067, 6.747958, 606));
        points.add(new Point(46.76583667, 6.74788083, 606));
        points.add(new Point(46.76579267, 6.747803, 606));
        points.add(new Point(46.76574717, 6.74772633, 605));
        points.add(new Point(46.76570083, 6.74765117, 605));
        points.add(new Point(46.76565367, 6.747577, 605));
        points.add(new Point(46.765607, 6.74750233, 605));
        points.add(new Point(46.76556333, 6.74743133, 604));
        points.add(new Point(46.765526, 6.7473705, 604));
        points.add(new Point(46.7654955, 6.74732467, 603));
        points.add(new Point(46.76546567, 6.747297, 603));
        points.add(new Point(46.76543033, 6.7472885, 603));
        points.add(new Point(46.7653895, 6.74729767, 602));
        points.add(new Point(46.76534483, 6.74732183, 602));
        points.add(new Point(46.76529717, 6.74735483, 602));
        points.add(new Point(46.76524533, 6.74739317, 601));
        points.add(new Point(46.76519067, 6.747435, 601));
        points.add(new Point(46.76513317, 6.74747917, 600));
        points.add(new Point(46.76507267, 6.74752517, 600));
        points.add(new Point(46.76500917, 6.7475705, 600));
        points.add(new Point(46.76494333, 6.74761467, 599));
        points.add(new Point(46.76487517, 6.7476565, 599));
        points.add(new Point(46.76480467, 6.747697, 599));
        points.add(new Point(46.764732, 6.747735, 599));
        points.add(new Point(46.76465933, 6.74777267, 599));
        points.add(new Point(46.76458633, 6.74781217, 598));
        points.add(new Point(46.764516, 6.74785167, 598));
        points.add(new Point(46.76445067, 6.747888, 598));
        points.add(new Point(46.76439333, 6.74791867, 597));
        points.add(new Point(46.7643435, 6.747945, 597));
        points.add(new Point(46.76430017, 6.74796783, 597));
        points.add(new Point(46.764262, 6.74798783, 597));
        points.add(new Point(46.7642285, 6.74800883, 597));
        points.add(new Point(46.764203, 6.74803717, 597));
        points.add(new Point(46.76419033, 6.748074, 596));
        points.add(new Point(46.76419683, 6.74811417, 596));
        points.add(new Point(46.76421633, 6.7481535, 596));
        points.add(new Point(46.76424317, 6.74819217, 596));
        points.add(new Point(46.764271, 6.74823367, 596));
        points.add(new Point(46.764301, 6.74827883, 596));
        points.add(new Point(46.76433133, 6.748328, 596));
        points.add(new Point(46.76436083, 6.74838133, 596));
        points.add(new Point(46.76439, 6.74843767, 596));
        points.add(new Point(46.76442017, 6.74849633, 596));
        points.add(new Point(46.76445133, 6.74855883, 596));
        points.add(new Point(46.76448267, 6.74862483, 596));
        points.add(new Point(46.76451483, 6.74869367, 596));
        points.add(new Point(46.764548, 6.74876333, 596));
        points.add(new Point(46.76458283, 6.74883417, 596));
        points.add(new Point(46.764619, 6.74890617, 596));
        points.add(new Point(46.76465583, 6.74898033, 595));
        points.add(new Point(46.76469217, 6.74905783, 595));
        points.add(new Point(46.76472683, 6.7491395, 595));
        points.add(new Point(46.76476067, 6.749225, 595));
        points.add(new Point(46.764794, 6.7493135, 594));
        points.add(new Point(46.76482583, 6.74940633, 594));
        points.add(new Point(46.76485483, 6.749503, 594));
        points.add(new Point(46.76487667, 6.74960433, 593));
        points.add(new Point(46.7648885, 6.74970983, 592));
        points.add(new Point(46.764891, 6.7498195, 592));
        points.add(new Point(46.76488733, 6.74993217, 591));
        points.add(new Point(46.76488267, 6.750047, 591));
        points.add(new Point(46.76487817, 6.75016283, 591));
        points.add(new Point(46.76487467, 6.75027967, 591));
        points.add(new Point(46.76487133, 6.750396, 591));
        points.add(new Point(46.76486783, 6.7505105, 590));
        points.add(new Point(46.76486433, 6.75062317, 590));
        points.add(new Point(46.76486167, 6.7507335, 590));
        points.add(new Point(46.76486133, 6.750842, 591));
        points.add(new Point(46.76486283, 6.750947, 592));
        points.add(new Point(46.764864, 6.75104667, 593));
        points.add(new Point(46.7648635, 6.7511395, 593));
        points.add(new Point(46.76486233, 6.75122583, 593));
        points.add(new Point(46.76486167, 6.751307, 593));
        points.add(new Point(46.76486217, 6.75138533, 594));
        points.add(new Point(46.76486217, 6.75146267, 594));
        points.add(new Point(46.76486183, 6.75153983, 594));
        points.add(new Point(46.7648615, 6.7516155, 594));
        points.add(new Point(46.76486433, 6.75168833, 595));
        points.add(new Point(46.76487117, 6.75175617, 595));
        points.add(new Point(46.76488417, 6.75182083, 595));
        points.add(new Point(46.76490683, 6.75188117, 596));
        points.add(new Point(46.7649405, 6.751932, 596));
        points.add(new Point(46.76497933, 6.75197683, 597));
        points.add(new Point(46.765016, 6.75201783, 597));
        points.add(new Point(46.76504983, 6.75206317, 598));
        points.add(new Point(46.76507867, 6.752111, 597));
        points.add(new Point(46.76510433, 6.75216083, 597));
        points.add(new Point(46.76512967, 6.75220983, 597));
        points.add(new Point(46.76516033, 6.75225433, 597));
        points.add(new Point(46.76519517, 6.75229633, 598));
        points.add(new Point(46.76523017, 6.75233833, 598));
        points.add(new Point(46.7652635, 6.75238167, 598));
        points.add(new Point(46.76529733, 6.75242483, 599));
        points.add(new Point(46.76533167, 6.75246717, 599));
        points.add(new Point(46.765366, 6.7525095, 599));
        points.add(new Point(46.76539883, 6.75255467, 599));
        points.add(new Point(46.76543183, 6.752599, 600));
        points.add(new Point(46.765467, 6.75264067, 600));
        points.add(new Point(46.76550533, 6.752678, 600));
        points.add(new Point(46.76554533, 6.75271533, 600));
        points.add(new Point(46.76558667, 6.7527535, 600));
        points.add(new Point(46.76562833, 6.752792, 600));
        points.add(new Point(46.76567067, 6.75283033, 600));
        points.add(new Point(46.76571267, 6.75286917, 600));
        points.add(new Point(46.76575533, 6.75290983, 600));
        points.add(new Point(46.765799, 6.75295217, 600));
        points.add(new Point(46.76584417, 6.7529955, 600));
        points.add(new Point(46.76589083, 6.75303933, 600));
        points.add(new Point(46.76593917, 6.753083, 600));
        points.add(new Point(46.76599, 6.75312667, 599));
        points.add(new Point(46.7660445, 6.75316967, 599));
        points.add(new Point(46.76610317, 6.75321167, 598));
        points.add(new Point(46.76616533, 6.753252, 598));
        points.add(new Point(46.76622917, 6.75329, 598));
        points.add(new Point(46.76629367, 6.7533255, 598));
        points.add(new Point(46.766358, 6.75335767, 598));
        points.add(new Point(46.76642217, 6.7533845, 598));
        points.add(new Point(46.76648683, 6.75340583, 598));
        points.add(new Point(46.76655183, 6.7534205, 598));
        points.add(new Point(46.7666165, 6.75343, 598));
        points.add(new Point(46.76668033, 6.75343567, 598));
        points.add(new Point(46.766744, 6.7534385, 598));
        points.add(new Point(46.7668085, 6.75344067, 598));
        points.add(new Point(46.76687483, 6.7534415, 598));
        points.add(new Point(46.76694167, 6.75344383, 599));
        points.add(new Point(46.7670085, 6.75344733, 599));
        points.add(new Point(46.76707333, 6.75345283, 599));
        points.add(new Point(46.76713633, 6.75345983, 599));
        points.add(new Point(46.76719667, 6.75346683, 599));
        points.add(new Point(46.767254, 6.75347383, 599));
        points.add(new Point(46.76730733, 6.75348, 600));
        points.add(new Point(46.76735667, 6.75348617, 600));
        points.add(new Point(46.7674025, 6.75349133, 600));
        points.add(new Point(46.7674465, 6.7534965, 600));
        points.add(new Point(46.76749017, 6.7535025, 601));
        points.add(new Point(46.7675335, 6.75351033, 601));
        points.add(new Point(46.76757567, 6.75352033, 601));
        points.add(new Point(46.76761667, 6.75353217, 601));
        points.add(new Point(46.76765617, 6.75354667, 601));
        points.add(new Point(46.767694, 6.75356183, 601));
        points.add(new Point(46.76772917, 6.7535765, 601));
        points.add(new Point(46.76776317, 6.75359067, 601));
        points.add(new Point(46.76779617, 6.75360667, 601));
        points.add(new Point(46.7678295, 6.75362633, 602));
        points.add(new Point(46.76786217, 6.75364767, 602));
        points.add(new Point(46.76789367, 6.75366917, 602));
        points.add(new Point(46.76792333, 6.75369067, 602));
        points.add(new Point(46.76795033, 6.7537125, 602));
        points.add(new Point(46.76797583, 6.75373383, 602));
        points.add(new Point(46.7680005, 6.75375483, 602));
        points.add(new Point(46.76802517, 6.75377667, 603));
        points.add(new Point(46.7680505, 6.753798, 603));
        points.add(new Point(46.768076, 6.7538195, 603));
        points.add(new Point(46.76810183, 6.75384033, 603));
        points.add(new Point(46.76812733, 6.75386133, 603));
        points.add(new Point(46.7681525, 6.7538815, 604));
        points.add(new Point(46.7681775, 6.753901, 604));
        points.add(new Point(46.76820167, 6.7539195, 604));
        points.add(new Point(46.768225, 6.75393817, 605));
        points.add(new Point(46.76824783, 6.75395583, 605));
        points.add(new Point(46.76827033, 6.75397183, 605));
        points.add(new Point(46.76829333, 6.75398617, 605));
        points.add(new Point(46.76831683, 6.75399983, 605));
        points.add(new Point(46.768341, 6.75401533, 605));
        points.add(new Point(46.76836633, 6.75403183, 605));
        points.add(new Point(46.76839267, 6.75404933, 605));
        points.add(new Point(46.76842083, 6.754068, 605));
        points.add(new Point(46.7684495, 6.75408767, 605));
        points.add(new Point(46.76847817, 6.75410883, 605));
        points.add(new Point(46.768507, 6.7541305, 606));
        points.add(new Point(46.76853633, 6.7541515, 605));
        points.add(new Point(46.76856517, 6.754173, 605));
        points.add(new Point(46.768593, 6.75419583, 605));
        points.add(new Point(46.76861867, 6.754221, 605));
        points.add(new Point(46.76864283, 6.75424933, 605));
        points.add(new Point(46.76866517, 6.754276, 605));
        points.add(new Point(46.76868683, 6.75430033, 605));
        points.add(new Point(46.76871, 6.75432067, 605));
        points.add(new Point(46.76873567, 6.754343, 605));
        points.add(new Point(46.76876317, 6.754367, 604));
        points.add(new Point(46.76878983, 6.75439267, 604));
        points.add(new Point(46.768817, 6.75441767, 604));
        points.add(new Point(46.768847, 6.75444333, 604));
        points.add(new Point(46.7688785, 6.75446767, 604));
        points.add(new Point(46.76890867, 6.75449167, 603));
        points.add(new Point(46.7689355, 6.754516, 602));
        points.add(new Point(46.7689615, 6.75454483, 603));
        points.add(new Point(46.768987, 6.75457717, 604));
        points.add(new Point(46.76901267, 6.7546105, 604));
        points.add(new Point(46.76903667, 6.75464117, 604));
        points.add(new Point(46.76906017, 6.75466967, 604));
        points.add(new Point(46.76908333, 6.754699, 605));
        points.add(new Point(46.76910533, 6.75472683, 605));
        points.add(new Point(46.7691255, 6.7547525, 605));
        points.add(new Point(46.76914567, 6.7547765, 606));
        points.add(new Point(46.76916567, 6.75480217, 605));
        points.add(new Point(46.76918867, 6.75483033, 605));
        points.add(new Point(46.76921117, 6.75485833, 607));
        points.add(new Point(46.76923583, 6.75488533, 607));
        points.add(new Point(46.76926017, 6.75491017, 607));
        points.add(new Point(46.7692855, 6.754936, 607));
        points.add(new Point(46.76931283, 6.75496033, 607));
        points.add(new Point(46.76934183, 6.7549865, 607));
        points.add(new Point(46.76937383, 6.75501267, 608));
        points.add(new Point(46.76940767, 6.75504317, 609));
        points.add(new Point(46.769442, 6.75507217, 609));
        points.add(new Point(46.76947367, 6.7551, 609));
        points.add(new Point(46.76950383, 6.75512817, 609));
        points.add(new Point(46.76953517, 6.75515733, 610));
        points.add(new Point(46.76956917, 6.755186, 610));
        points.add(new Point(46.76960217, 6.75521117, 611));
        points.add(new Point(46.76963267, 6.75523467, 611));
        points.add(new Point(46.76966017, 6.75525683, 612));
        points.add(new Point(46.76968583, 6.755279, 612));
        points.add(new Point(46.76971033, 6.75530167, 612));
        points.add(new Point(46.76973417, 6.75532333, 612));
        points.add(new Point(46.76975983, 6.755343, 612));
        points.add(new Point(46.76979117, 6.75536683, 612));
        points.add(new Point(46.7698255, 6.75539433, 613));
        points.add(new Point(46.76985967, 6.75542383, 613));
        points.add(new Point(46.769889, 6.75545, 613));
        points.add(new Point(46.76991517, 6.75547583, 613));
        points.add(new Point(46.76994167, 6.75550517, 613));
        points.add(new Point(46.769968, 6.75553583, 613));
        points.add(new Point(46.7699955, 6.75556517, 613));
        points.add(new Point(46.77002183, 6.755592, 613));
        points.add(new Point(46.77004817, 6.75562117, 613));
        points.add(new Point(46.77007283, 6.75565083, 612));
        points.add(new Point(46.77009983, 6.75568133, 611));
        points.add(new Point(46.77012583, 6.75571183, 611));
        points.add(new Point(46.7701535, 6.75574333, 610));
        points.add(new Point(46.7701785, 6.75577283, 609));
        points.add(new Point(46.7702045, 6.75579967, 609));
        points.add(new Point(46.7702285, 6.75582817, 610));
        points.add(new Point(46.7702525, 6.75585983, 610));
        points.add(new Point(46.77027783, 6.75589333, 611));
        points.add(new Point(46.77030433, 6.75592717, 611));
        points.add(new Point(46.77033167, 6.755963, 613));
        points.add(new Point(46.7703585, 6.75600033, 612));
        points.add(new Point(46.77038767, 6.7560395, 612));
        points.add(new Point(46.77041533, 6.75607633, 612));
        points.add(new Point(46.77044383, 6.75611333, 613));
        points.add(new Point(46.7704705, 6.75615, 614));
        points.add(new Point(46.77050283, 6.75619033, 614));
        points.add(new Point(46.77053417, 6.7562375, 614));
        points.add(new Point(46.7705675, 6.7562895, 612));
        points.add(new Point(46.770603, 6.75634117, 613));
        points.add(new Point(46.77064133, 6.75639217, 612));
        points.add(new Point(46.77068217, 6.756447, 610));
        points.add(new Point(46.77072383, 6.75651417, 607));
        points.add(new Point(46.77076367, 6.75658833, 606));
        points.add(new Point(46.77080183, 6.75665833, 604));
        points.add(new Point(46.7708355, 6.75673133, 604));
        points.add(new Point(46.77086917, 6.75680833, 604));
        points.add(new Point(46.77090567, 6.7568955, 603));
        points.add(new Point(46.77094817, 6.75698033, 603));
        points.add(new Point(46.77094817, 6.75698033, 603));
        points.add(new Point(46.771006, 6.757061, 603));
        points.add(new Point(46.77109017, 6.75714217, 601));
        points.add(new Point(46.77118583, 6.7572235, 598));
        points.add(new Point(46.771284, 6.75730767, 597));
        points.add(new Point(46.771371, 6.7573905, 597));
        points.add(new Point(46.77145767, 6.75747317, 597));
        points.add(new Point(46.7715425, 6.757551, 598));
        points.add(new Point(46.7716235, 6.7576245, 600));
        points.add(new Point(46.77170367, 6.75769783, 602));
        points.add(new Point(46.771796, 6.757783, 601));
        points.add(new Point(46.77189083, 6.75786833, 600));
        points.add(new Point(46.7719865, 6.75794967, 598));
        points.add(new Point(46.77206867, 6.75802183, 597));
        points.add(new Point(46.772144, 6.758096, 599));
        points.add(new Point(46.77221333, 6.75817117, 599));
        points.add(new Point(46.77227767, 6.758243, 599));
        points.add(new Point(46.77233867, 6.7583115, 599));
        points.add(new Point(46.77239533, 6.7583765, 600));
        points.add(new Point(46.77244817, 6.75844083, 602));
        points.add(new Point(46.77249683, 6.7585085, 605));
        points.add(new Point(46.77253917, 6.7585745, 605));
        points.add(new Point(46.772577, 6.75863517, 605));
        points.add(new Point(46.772611, 6.7586875, 606));
        points.add(new Point(46.77264367, 6.758737, 606));
        points.add(new Point(46.7726755, 6.75878433, 606));
        points.add(new Point(46.77270783, 6.75883067, 606));
        points.add(new Point(46.77274133, 6.75887733, 607));
        points.add(new Point(46.77277533, 6.75892567, 607));
        points.add(new Point(46.77281, 6.758975, 607));
        points.add(new Point(46.7728445, 6.75902433, 607));
        points.add(new Point(46.77287983, 6.75907467, 607));
        points.add(new Point(46.77291517, 6.75912617, 607));
        points.add(new Point(46.77295117, 6.75917817, 607));
        points.add(new Point(46.77298733, 6.75923017, 607));
        points.add(new Point(46.77302483, 6.75928217, 607));
        points.add(new Point(46.77306317, 6.75933383, 607));
        points.add(new Point(46.773105, 6.75938183, 608));
        points.add(new Point(46.77314867, 6.75942617, 608));
        points.add(new Point(46.7731945, 6.759467, 608));
        points.add(new Point(46.77323967, 6.75950783, 608));
        points.add(new Point(46.773285, 6.75954867, 608));
        points.add(new Point(46.77333033, 6.75959033, 608));
        points.add(new Point(46.77337683, 6.7596325, 608));
        points.add(new Point(46.77342433, 6.75967567, 607));
        points.add(new Point(46.77347317, 6.75971983, 607));
        points.add(new Point(46.7735225, 6.75976533, 607));
        points.add(new Point(46.77357267, 6.75981183, 607));
        points.add(new Point(46.77362417, 6.75985933, 607));
        points.add(new Point(46.77367733, 6.75990733, 606));
        points.add(new Point(46.77373233, 6.75995633, 606));
        points.add(new Point(46.77378767, 6.7600075, 606));
        points.add(new Point(46.773842, 6.7600605, 605));
        points.add(new Point(46.7738945, 6.76011583, 605));
        points.add(new Point(46.77394483, 6.7601725, 605));
        points.add(new Point(46.773994, 6.76023083, 605));
        points.add(new Point(46.77404317, 6.760291, 605));
        points.add(new Point(46.77409217, 6.7603535, 604));
        points.add(new Point(46.77414117, 6.76041767, 604));
        points.add(new Point(46.77419033, 6.76048283, 604));
        points.add(new Point(46.774239, 6.76054767, 603));
        points.add(new Point(46.77428783, 6.76061183, 603));
        points.add(new Point(46.77433533, 6.76067333, 603));
        points.add(new Point(46.7743805, 6.76073133, 603));
        points.add(new Point(46.77442217, 6.76078383, 604));
        points.add(new Point(46.77445817, 6.76082983, 604));
        points.add(new Point(46.77448733, 6.76086833, 604));
        points.add(new Point(46.77450867, 6.76090083, 604));
        points.add(new Point(46.774525, 6.76092717, 604));
        points.add(new Point(46.77453817, 6.76094617, 604));
        points.add(new Point(46.77454917, 6.76095983, 604));
        points.add(new Point(46.77455617, 6.76096883, 604));
        points.add(new Point(46.77455917, 6.76097233, 604));
        points.add(new Point(46.7745595, 6.76097233, 604));
        points.add(new Point(46.77455917, 6.76097017, 605));
        points.add(new Point(46.77455933, 6.76097033, 604));
        points.add(new Point(46.77455917, 6.76097, 604));
        points.add(new Point(46.77455883, 6.76097, 604));
        points.add(new Point(46.77455817, 6.76097083, 605));
        points.add(new Point(46.77455833, 6.76097167, 605));
        points.add(new Point(46.774559, 6.76097167, 605));
        points.add(new Point(46.7745595, 6.76097083, 605));
        points.add(new Point(46.7745595, 6.7609705, 605));
        points.add(new Point(46.77455883, 6.76097133, 605));
        points.add(new Point(46.774559, 6.76097183, 605));
        points.add(new Point(46.77455967, 6.760972, 605));
        points.add(new Point(46.77456083, 6.76097183, 604));
        points.add(new Point(46.77456217, 6.76097167, 604));
        points.add(new Point(46.7745635, 6.7609715, 604));
        points.add(new Point(46.77456533, 6.76097133, 604));
        points.add(new Point(46.774569, 6.76097233, 604));
        points.add(new Point(46.77457417, 6.760974, 603));
        points.add(new Point(46.77458167, 6.760977, 603));
        points.add(new Point(46.77458967, 6.76097717, 603));
        points.add(new Point(46.77459817, 6.76097217, 602));
        points.add(new Point(46.77460583, 6.7609545, 602));
        points.add(new Point(46.77461417, 6.76092517, 602));
        points.add(new Point(46.77462383, 6.76088617, 603));
        points.add(new Point(46.77463583, 6.760842, 603));
        points.add(new Point(46.774652, 6.760795, 603));
        points.add(new Point(46.77467267, 6.760747, 603));
        points.add(new Point(46.7746975, 6.7606995, 602));
        points.add(new Point(46.77472467, 6.7606525, 602));
        points.add(new Point(46.77475417, 6.7606055, 602));
        points.add(new Point(46.7747855, 6.7605585, 602));
        points.add(new Point(46.77481833, 6.7605115, 602));
        points.add(new Point(46.774852, 6.76046283, 602));
        points.add(new Point(46.77488367, 6.7604115, 602));
        points.add(new Point(46.774911, 6.76035783, 602));
        points.add(new Point(46.7749325, 6.76030683, 602));
        points.add(new Point(46.77494983, 6.7602645, 602));
        points.add(new Point(46.77496533, 6.76023083, 601));
        points.add(new Point(46.77497983, 6.76020517, 601));
        points.add(new Point(46.77499317, 6.76018417, 601));
        points.add(new Point(46.775001, 6.76016967, 601));
        points.add(new Point(46.775006, 6.76015667, 601));
        points.add(new Point(46.77500883, 6.76014517, 601));
        points.add(new Point(46.775014, 6.76013017, 601));
        points.add(new Point(46.77502283, 6.760119, 601));
        points.add(new Point(46.77503067, 6.7601075, 601));
        points.add(new Point(46.775039, 6.7600975, 601));
        points.add(new Point(46.77504433, 6.76008617, 601));
        points.add(new Point(46.77505133, 6.76007617, 602));
        points.add(new Point(46.77505633, 6.76006767, 602));
        points.add(new Point(46.775058, 6.76006, 602));
        points.add(new Point(46.775057, 6.760055, 602));
        points.add(new Point(46.77505533, 6.760052, 603));
        points.add(new Point(46.7750545, 6.76005067, 603));
        points.add(new Point(46.77505383, 6.76004983, 603));
        points.add(new Point(46.77505333, 6.76004967, 603));
        points.add(new Point(46.77505317, 6.7600495, 603));
        points.add(new Point(46.7750535, 6.76004917, 603));
        points.add(new Point(46.77505383, 6.760049, 603));
        points.add(new Point(46.77505433, 6.760049, 603));
        points.add(new Point(46.77505467, 6.76004883, 603));
        points.add(new Point(46.77505517, 6.76004883, 603));
        points.add(new Point(46.77505533, 6.7600485, 603));
        points.add(new Point(46.77505517, 6.76004783, 604));
        points.add(new Point(46.77505483, 6.76004683, 604));
        points.add(new Point(46.77505417, 6.760046, 604));
        points.add(new Point(46.77505367, 6.76004533, 604));
        points.add(new Point(46.77505317, 6.76004483, 604));
        points.add(new Point(46.7750525, 6.76004433, 604));
        points.add(new Point(46.7750515, 6.760044, 604));
        points.add(new Point(46.77505, 6.7600435, 604));
        points.add(new Point(46.775048, 6.760043, 604));
        points.add(new Point(46.77504567, 6.7600425, 604));
        points.add(new Point(46.775044, 6.76004117, 605));
        points.add(new Point(46.77504217, 6.76003933, 605));
        points.add(new Point(46.77504083, 6.76003583, 604));
        points.add(new Point(46.77504067, 6.76002867, 605));
        points.add(new Point(46.775044, 6.76001733, 605));
        points.add(new Point(46.77505083, 6.7600025, 605));
        points.add(new Point(46.77506017, 6.75998733, 606));
        points.add(new Point(46.77507283, 6.75996833, 605));
        points.add(new Point(46.7750875, 6.759946, 605));
        points.add(new Point(46.77510367, 6.75991867, 604));
        points.add(new Point(46.775119, 6.75989233, 604));
        points.add(new Point(46.77513417, 6.75986683, 604));
        points.add(new Point(46.77514867, 6.75984317, 605));
        points.add(new Point(46.77516333, 6.75981917, 605));
        points.add(new Point(46.77517717, 6.7597935, 606));
        points.add(new Point(46.7751905, 6.75976733, 605));
        points.add(new Point(46.77520217, 6.759738, 607));
        points.add(new Point(46.77521167, 6.75970583, 607));
        points.add(new Point(46.77521983, 6.75967433, 608));
        points.add(new Point(46.7752255, 6.75964, 608));
        points.add(new Point(46.77523117, 6.75960767, 609));
        points.add(new Point(46.77523617, 6.7595735, 609));
        points.add(new Point(46.77524067, 6.7595385, 611));
        points.add(new Point(46.77524383, 6.7595005, 612));
        points.add(new Point(46.7752445, 6.75946067, 612));
        points.add(new Point(46.77524783, 6.75942317, 613));
        points.add(new Point(46.77525183, 6.75938683, 613));
        points.add(new Point(46.77525583, 6.7593495, 614));
        points.add(new Point(46.77525867, 6.75931233, 614));
        points.add(new Point(46.77526217, 6.759277, 615));
        points.add(new Point(46.7752685, 6.75924417, 615));
        points.add(new Point(46.775276, 6.75921317, 615));
        points.add(new Point(46.77528233, 6.759182, 615));
        points.add(new Point(46.7752875, 6.75915317, 616));
        points.add(new Point(46.77529183, 6.759126, 616));
        points.add(new Point(46.77529917, 6.75909717, 616));
        points.add(new Point(46.77530833, 6.7590675, 616));
        points.add(new Point(46.77531883, 6.759038, 617));
        points.add(new Point(46.77532783, 6.7590125, 617));
        points.add(new Point(46.7753365, 6.75898967, 617));
        points.add(new Point(46.775347, 6.75896933, 617));
        points.add(new Point(46.7753605, 6.75895467, 617));
        points.add(new Point(46.7753775, 6.7589465, 617));
        points.add(new Point(46.77539283, 6.75894017, 617));
        points.add(new Point(46.775409, 6.758934, 618));
        points.add(new Point(46.7754255, 6.75892967, 618));
        points.add(new Point(46.7754425, 6.75893567, 618));
        points.add(new Point(46.775457, 6.75894817, 619));
        points.add(new Point(46.7754665, 6.75896083, 619));
        points.add(new Point(46.77547483, 6.75896917, 619));
        points.add(new Point(46.7754825, 6.758978, 619));
        points.add(new Point(46.77549, 6.75898733, 619));
        points.add(new Point(46.7754955, 6.75899683, 620));
        points.add(new Point(46.77550183, 6.75900533, 619));
        points.add(new Point(46.77550933, 6.75901533, 619));
        points.add(new Point(46.77551767, 6.759029, 619));
        points.add(new Point(46.775525, 6.75904533, 619));
        points.add(new Point(46.77553267, 6.75906517, 619));
        points.add(new Point(46.7755405, 6.7590895, 620));
        points.add(new Point(46.77554667, 6.75911617, 620));
        points.add(new Point(46.77554617, 6.75914317, 620));
        points.add(new Point(46.77554267, 6.759165, 620));
        points.add(new Point(46.77553833, 6.75918417, 620));
        points.add(new Point(46.775538, 6.75920167, 620));
        points.add(new Point(46.77553867, 6.75921867, 620));
        points.add(new Point(46.77554, 6.7592345, 620));
        points.add(new Point(46.77554083, 6.75925133, 620));
        points.add(new Point(46.775541, 6.75926983, 621));
        points.add(new Point(46.77553983, 6.75928883, 621));
        points.add(new Point(46.77553967, 6.759306, 621));
        points.add(new Point(46.77554117, 6.75931983, 620));
        points.add(new Point(46.77554517, 6.75933033, 620));
        points.add(new Point(46.7755505, 6.75933817, 621));
        points.add(new Point(46.7755565, 6.75934617, 621));
        points.add(new Point(46.775562, 6.75935733, 621));
        points.add(new Point(46.77556617, 6.75937333, 621));
        points.add(new Point(46.77556817, 6.759392, 621));
        points.add(new Point(46.77556783, 6.75940967, 621));
        points.add(new Point(46.775566, 6.7594255, 621));
        points.add(new Point(46.77556267, 6.75943767, 621));
        points.add(new Point(46.7755605, 6.75944617, 621));
        points.add(new Point(46.77555967, 6.75944917, 621));
        points.add(new Point(46.77556083, 6.75944933, 621));
        points.add(new Point(46.775562, 6.75944817, 621));
        points.add(new Point(46.77556267, 6.75944717, 621));
        points.add(new Point(46.7755635, 6.75944667, 621));
        points.add(new Point(46.775565, 6.75944667, 622));
        points.add(new Point(46.77556633, 6.75944683, 622));
        points.add(new Point(46.77556667, 6.75944817, 622));
        points.add(new Point(46.77556383, 6.7594525, 622));
        points.add(new Point(46.77555833, 6.75946017, 623));
        points.add(new Point(46.7755505, 6.75947017, 623));
        points.add(new Point(46.77554267, 6.75947983, 623));
        points.add(new Point(46.77553517, 6.75948783, 623));
        points.add(new Point(46.77552767, 6.7594945, 622));
        points.add(new Point(46.775519, 6.75949833, 622));
        points.add(new Point(46.775508, 6.75949717, 622));
        points.add(new Point(46.77549383, 6.75949017, 622));
        points.add(new Point(46.775477, 6.75947783, 621));
        points.add(new Point(46.77545983, 6.7594635, 621));
        points.add(new Point(46.77544333, 6.75944367, 621));
        points.add(new Point(46.77542867, 6.75942, 621));
        points.add(new Point(46.77541533, 6.75939283, 621));
        points.add(new Point(46.77540283, 6.75936517, 621));
        points.add(new Point(46.77539083, 6.75933833, 621));
        points.add(new Point(46.77537933, 6.759314, 621));
        points.add(new Point(46.77537267, 6.7593, 622));
        points.add(new Point(46.77537, 6.75929567, 622));
        points.add(new Point(46.77537067, 6.75929783, 622));
        points.add(new Point(46.77537067, 6.7593, 623));
        points.add(new Point(46.77537167, 6.75930083, 622));
        points.add(new Point(46.77537217, 6.7593005, 622));
        points.add(new Point(46.775373, 6.75929633, 621));
        points.add(new Point(46.77537333, 6.7592925, 621));
        points.add(new Point(46.77537417, 6.759289, 621));
        points.add(new Point(46.77537667, 6.75928917, 622));
        points.add(new Point(46.77538017, 6.75929083, 622));
        points.add(new Point(46.77538367, 6.75929267, 621));
        points.add(new Point(46.7753855, 6.75929383, 621));
        points.add(new Point(46.7753865, 6.75929417, 621));
        points.add(new Point(46.775387, 6.7592975, 621));
        points.add(new Point(46.77538867, 6.75930417, 620));
        points.add(new Point(46.77539, 6.759315, 620));
        points.add(new Point(46.775392, 6.759329, 619));
        points.add(new Point(46.775393, 6.75934833, 619));
        points.add(new Point(46.7753945, 6.7593705, 619));
        points.add(new Point(46.775393, 6.75939783, 618));
        points.add(new Point(46.77538683, 6.7594315, 617));
        points.add(new Point(46.77537217, 6.7594745, 614));
        points.add(new Point(46.77535, 6.75952883, 612));
        points.add(new Point(46.77532317, 6.75959017, 611));
        points.add(new Point(46.77529667, 6.759646, 610));
        points.add(new Point(46.775273, 6.75968483, 608));
        points.add(new Point(46.7752505, 6.75970233, 606));
        points.add(new Point(46.77523083, 6.75971117, 606));
        points.add(new Point(46.77521517, 6.75971783, 605));
        points.add(new Point(46.77520417, 6.75972883, 605));
        points.add(new Point(46.77519367, 6.7597415, 604));
        points.add(new Point(46.7751815, 6.7597565, 603));
        points.add(new Point(46.775166, 6.7597735, 603));
        points.add(new Point(46.77514733, 6.75980367, 604));
        points.add(new Point(46.77512783, 6.7598435, 605));
        points.add(new Point(46.77511, 6.75988867, 605));
        points.add(new Point(46.77509517, 6.759928, 604));
        points.add(new Point(46.77508083, 6.759967, 604));
        points.add(new Point(46.77506667, 6.76000633, 603));
        points.add(new Point(46.775053, 6.76004583, 603));
        points.add(new Point(46.77504067, 6.76008217, 603));
        points.add(new Point(46.775029, 6.7601145, 603));
        points.add(new Point(46.775018, 6.76014217, 603));
        points.add(new Point(46.77500833, 6.76016667, 602));
        points.add(new Point(46.77499983, 6.760189, 602));
        points.add(new Point(46.77499217, 6.76020767, 601));
        points.add(new Point(46.77498467, 6.76022483, 601));
        points.add(new Point(46.774978, 6.76024133, 601));
        points.add(new Point(46.77497217, 6.76025933, 601));
        points.add(new Point(46.774967, 6.760275, 601));
        points.add(new Point(46.77496267, 6.76028633, 601));
        points.add(new Point(46.77495683, 6.76029133, 600));
        points.add(new Point(46.7749495, 6.76028567, 601));
        points.add(new Point(46.77494233, 6.760273, 600));
        points.add(new Point(46.77494033, 6.76025517, 601));
        points.add(new Point(46.7749435, 6.76023867, 600));
        points.add(new Point(46.774952, 6.760226, 600));
        points.add(new Point(46.77496267, 6.76021783, 600));
        points.add(new Point(46.77497733, 6.7602125, 600));
        points.add(new Point(46.7749925, 6.76020717, 600));
        points.add(new Point(46.7750075, 6.7602035, 600));
        points.add(new Point(46.77501917, 6.76020233, 600));
        points.add(new Point(46.77502833, 6.76020433, 600));
        points.add(new Point(46.77503567, 6.760208, 600));
        points.add(new Point(46.775043, 6.76021483, 600));
        points.add(new Point(46.77505167, 6.7602245, 599));
        points.add(new Point(46.77506083, 6.76023733, 598));
        points.add(new Point(46.775069, 6.76025133, 599));
        points.add(new Point(46.775076, 6.7602675, 598));
        points.add(new Point(46.775081, 6.76028167, 598));
        points.add(new Point(46.775085, 6.76029033, 598));
        points.add(new Point(46.77508683, 6.760293, 598));
        points.add(new Point(46.77508733, 6.76029433, 598));
        points.add(new Point(46.77508633, 6.76029733, 599));
        points.add(new Point(46.77508583, 6.76030017, 599));
        points.add(new Point(46.775085, 6.76030283, 599));
        points.add(new Point(46.77508433, 6.760305, 600));
        points.add(new Point(46.77508317, 6.7603075, 601));
        points.add(new Point(46.77508217, 6.7603095, 601));
        points.add(new Point(46.7750785, 6.760309, 601));
        points.add(new Point(46.77507267, 6.76030333, 602));
        points.add(new Point(46.77506417, 6.76029317, 602));
        points.add(new Point(46.77505467, 6.76028017, 602));
        points.add(new Point(46.77504483, 6.76026367, 601));
        points.add(new Point(46.77503533, 6.76024433, 601));
        points.add(new Point(46.77502567, 6.76022517, 601));
        points.add(new Point(46.77501417, 6.76021133, 602));
        points.add(new Point(46.775003, 6.760204, 601));
        points.add(new Point(46.7749935, 6.76020367, 601));
        points.add(new Point(46.77498517, 6.76020733, 601));
        points.add(new Point(46.77497867, 6.76021333, 601));
        points.add(new Point(46.7749715, 6.76022, 601));
        points.add(new Point(46.77496767, 6.76022633, 600));
        points.add(new Point(46.77496417, 6.76023533, 600));
        points.add(new Point(46.77496417, 6.76024617, 600));
        points.add(new Point(46.77496517, 6.76025967, 600));
        points.add(new Point(46.7749655, 6.76027217, 601));
        points.add(new Point(46.77496567, 6.76027983, 601));
        points.add(new Point(46.77496433, 6.7602845, 601));
        points.add(new Point(46.774964, 6.76028633, 601));
        points.add(new Point(46.77496, 6.760291, 601));
        points.add(new Point(46.77495433, 6.760298, 600));
        points.add(new Point(46.774946, 6.76030533, 600));
        points.add(new Point(46.774939, 6.760305, 599));
        points.add(new Point(46.77493183, 6.76029633, 600));
        points.add(new Point(46.77492783, 6.7602805, 599));
        points.add(new Point(46.77492767, 6.7602615, 599));
        points.add(new Point(46.77493083, 6.76023983, 599));
        points.add(new Point(46.77493467, 6.76021483, 600));
        points.add(new Point(46.77494, 6.76018633, 600));
        points.add(new Point(46.774946, 6.76015267, 600));
        points.add(new Point(46.774952, 6.760112, 600));
        points.add(new Point(46.77495633, 6.76006283, 599));
        points.add(new Point(46.77495867, 6.76000317, 599));
        points.add(new Point(46.77496267, 6.75993617, 599));
        points.add(new Point(46.77496767, 6.75986267, 598));
        points.add(new Point(46.7749745, 6.75978567, 597));
        points.add(new Point(46.774979, 6.759705, 597));
        points.add(new Point(46.77498317, 6.75962333, 596));
        points.add(new Point(46.774983, 6.75953983, 596));
        points.add(new Point(46.7749795, 6.75945483, 596));
        points.add(new Point(46.77497017, 6.75936933, 596));
        points.add(new Point(46.77495817, 6.75928583, 596));
        points.add(new Point(46.77494417, 6.75920233, 596));
        points.add(new Point(46.77493133, 6.75911733, 595));
        points.add(new Point(46.77492, 6.759027, 594));
        points.add(new Point(46.774911, 6.75893283, 594));
        points.add(new Point(46.77490283, 6.758837, 594));
        points.add(new Point(46.77489633, 6.75874583, 593));
        points.add(new Point(46.77489433, 6.758658, 593));
        points.add(new Point(46.77489817, 6.75857133, 593));
        points.add(new Point(46.77490717, 6.75848183, 593));
        points.add(new Point(46.7749185, 6.75839133, 593));
        points.add(new Point(46.77493083, 6.75830367, 593));
        points.add(new Point(46.774943, 6.75822467, 594));
        points.add(new Point(46.77495267, 6.75815717, 595));
        points.add(new Point(46.77495983, 6.75809767, 594));
        points.add(new Point(46.77496717, 6.75804517, 594));
        points.add(new Point(46.77497233, 6.75799933, 594));
        points.add(new Point(46.77497667, 6.757964, 594));
        points.add(new Point(46.77497717, 6.75793417, 595));
        points.add(new Point(46.77497867, 6.75790717, 595));
        points.add(new Point(46.7749805, 6.75787833, 596));
        points.add(new Point(46.77498383, 6.75784533, 596));
        points.add(new Point(46.77498867, 6.75780717, 596));
        points.add(new Point(46.77499333, 6.75776333, 597));
        points.add(new Point(46.7749955, 6.7577135, 597));
        points.add(new Point(46.77499467, 6.75766167, 596));
        points.add(new Point(46.7749915, 6.75760733, 596));
        points.add(new Point(46.7749895, 6.75755467, 596));
        points.add(new Point(46.774988, 6.757502, 596));
        points.add(new Point(46.77498833, 6.75745083, 596));
        points.add(new Point(46.77499017, 6.7573995, 595));
        points.add(new Point(46.7749975, 6.75734683, 595));
        points.add(new Point(46.77500917, 6.75729483, 594));
        points.add(new Point(46.77502833, 6.75724433, 594));
        points.add(new Point(46.77505767, 6.75718733, 593));
        points.add(new Point(46.7750905, 6.75713367, 593));
        points.add(new Point(46.7751175, 6.757094, 592));
        points.add(new Point(46.77513283, 6.75708267, 592));
        points.add(new Point(46.7751395, 6.7570845, 592));
        points.add(new Point(46.77514467, 6.7570855, 593));
        points.add(new Point(46.77514583, 6.7570805, 594));
        points.add(new Point(46.77514617, 6.75707183, 594));
        points.add(new Point(46.77514467, 6.75706517, 595));
        points.add(new Point(46.77514267, 6.75706017, 595));
        points.add(new Point(46.77514117, 6.75705717, 595));
        points.add(new Point(46.7751405, 6.75705433, 595));
        points.add(new Point(46.77514133, 6.75704983, 596));
        points.add(new Point(46.77514267, 6.7570465, 596));
        points.add(new Point(46.77514383, 6.75704483, 596));
        points.add(new Point(46.77514433, 6.75704517, 597));
        points.add(new Point(46.77514467, 6.75704517, 597));
        points.add(new Point(46.7751455, 6.75704433, 597));
        points.add(new Point(46.77514683, 6.75704267, 598));
        points.add(new Point(46.77514883, 6.75704017, 598));
        points.add(new Point(46.77515017, 6.757037, 599));
        points.add(new Point(46.77515183, 6.757034, 599));
        points.add(new Point(46.77515383, 6.7570315, 600));
        points.add(new Point(46.77515683, 6.7570295, 601));
        points.add(new Point(46.77515983, 6.7570275, 600));
        points.add(new Point(46.77516533, 6.75702083, 599));
        points.add(new Point(46.77517517, 6.757009, 598));
        points.add(new Point(46.77519267, 6.75698783, 597));
        points.add(new Point(46.7752175, 6.756959, 596));
        points.add(new Point(46.77524417, 6.75692317, 595));
        points.add(new Point(46.775272, 6.7568885, 594));
        points.add(new Point(46.7752975, 6.75685367, 592));
        points.add(new Point(46.77532567, 6.756819, 591));
        points.add(new Point(46.775352, 6.75677917, 589));
        points.add(new Point(46.77537817, 6.75673717, 587));
        points.add(new Point(46.77540133, 6.75669467, 586));
        points.add(new Point(46.77542133, 6.7566565, 584));
        points.add(new Point(46.7754395, 6.7566295, 584));
        points.add(new Point(46.77545583, 6.75661383, 584));
        points.add(new Point(46.77546233, 6.75661517, 585));
        points.add(new Point(46.7754675, 6.756621, 585));
        points.add(new Point(46.775478, 6.756626, 583));
        points.add(new Point(46.77549833, 6.75662067, 583));
        points.add(new Point(46.7755175, 6.7566155, 584));
        points.add(new Point(46.775532, 6.75660933, 583));
        points.add(new Point(46.775543, 6.756605, 583));
        points.add(new Point(46.77555367, 6.75659767, 583));
        points.add(new Point(46.77556067, 6.75659267, 583));
        points.add(new Point(46.77556817, 6.756587, 583));
        points.add(new Point(46.77557367, 6.75657933, 584));
        points.add(new Point(46.77557933, 6.75656917, 583));
        points.add(new Point(46.77558333, 6.75656, 584));
        points.add(new Point(46.77559117, 6.75655267, 584));
        points.add(new Point(46.77560133, 6.75654783, 585));
        points.add(new Point(46.77561117, 6.75654467, 585));
        points.add(new Point(46.77561683, 6.75653733, 585));
        points.add(new Point(46.77561933, 6.75652383, 585));
        points.add(new Point(46.7756235, 6.7565045, 585));
        points.add(new Point(46.77563067, 6.75648183, 584));
        points.add(new Point(46.7756445, 6.75645067, 581));
        points.add(new Point(46.775665, 6.75640633, 579));
        points.add(new Point(46.7756895, 6.7563575, 578));
        points.add(new Point(46.7757125, 6.75631367, 577));
        points.add(new Point(46.7757395, 6.75627467, 575));
        points.add(new Point(46.77576833, 6.75623433, 573));
        points.add(new Point(46.77580067, 6.75619417, 572));
        points.add(new Point(46.7758295, 6.75615767, 570));
        points.add(new Point(46.775857, 6.75613533, 568));
        points.add(new Point(46.77587967, 6.7561175, 568));
        points.add(new Point(46.7758995, 6.75611133, 568));
        points.add(new Point(46.77591733, 6.75611167, 568));
        points.add(new Point(46.77593283, 6.7561155, 567));
        points.add(new Point(46.775944, 6.75611733, 566));
        points.add(new Point(46.7759485, 6.7561135, 566));
        points.add(new Point(46.77595167, 6.75611267, 566));
        points.add(new Point(46.7759545, 6.7561095, 566));
        points.add(new Point(46.775957, 6.75610567, 566));
        points.add(new Point(46.775958, 6.75610267, 566));
        points.add(new Point(46.7759595, 6.75610133, 566));
        points.add(new Point(46.7759625, 6.75609833, 566));
        points.add(new Point(46.77596717, 6.75609133, 565));
        points.add(new Point(46.77597133, 6.75608467, 565));
        points.add(new Point(46.77597567, 6.75607883, 564));
        points.add(new Point(46.77598167, 6.75607633, 563));
        points.add(new Point(46.7759915, 6.7560745, 563));
        points.add(new Point(46.77600417, 6.7560805, 561));
        points.add(new Point(46.77601683, 6.75608433, 561));
        points.add(new Point(46.7760265, 6.756086, 560));
        points.add(new Point(46.776035, 6.7560825, 559));
        points.add(new Point(46.77604167, 6.75607217, 560));
        points.add(new Point(46.7760495, 6.7560635, 559));
        points.add(new Point(46.77605667, 6.75605283, 559));
        points.add(new Point(46.77606517, 6.75605083, 558));
        points.add(new Point(46.7760725, 6.75604983, 557));
        points.add(new Point(46.77607917, 6.756046, 556));
        points.add(new Point(46.77608467, 6.75604183, 555));
        points.add(new Point(46.77608833, 6.7560335, 556));
        points.add(new Point(46.77609183, 6.756029, 555));
        points.add(new Point(46.77609367, 6.75602383, 555));
        points.add(new Point(46.77609667, 6.75602267, 555));
        points.add(new Point(46.776098, 6.7560165, 555));
        points.add(new Point(46.776102, 6.75601017, 555));
        points.add(new Point(46.77610783, 6.75600383, 553));
        points.add(new Point(46.77611583, 6.7560035, 553));
        points.add(new Point(46.776123, 6.75599833, 553));
        points.add(new Point(46.77612883, 6.75598983, 552));
        points.add(new Point(46.77613417, 6.7559755, 552));
        points.add(new Point(46.77614167, 6.755962, 552));
        points.add(new Point(46.776151, 6.75594767, 551));
        points.add(new Point(46.77616183, 6.7559345, 551));
        points.add(new Point(46.7761735, 6.75592317, 550));
        points.add(new Point(46.77618567, 6.75591333, 550));
        points.add(new Point(46.7761975, 6.7559035, 549));
        points.add(new Point(46.77620883, 6.755895, 548));
        points.add(new Point(46.77621833, 6.7558845, 548));
        points.add(new Point(46.77622783, 6.755874, 548));
        points.add(new Point(46.77623933, 6.75585483, 549));
        points.add(new Point(46.77625433, 6.755832, 551));
        points.add(new Point(46.77626983, 6.75581083, 550));
        points.add(new Point(46.77628417, 6.75579833, 550));
        points.add(new Point(46.7762965, 6.75579, 550));
        points.add(new Point(46.77630983, 6.75578167, 549));
        points.add(new Point(46.77632217, 6.7557735, 549));
        points.add(new Point(46.77633433, 6.755774, 548));
        points.add(new Point(46.776342, 6.75577617, 548));
        points.add(new Point(46.7763435, 6.75577983, 549));
        points.add(new Point(46.776341, 6.75576917, 551));
        points.add(new Point(46.7763445, 6.75575483, 553));
        points.add(new Point(46.77635533, 6.7557375, 552));
        points.add(new Point(46.77636933, 6.75572717, 551));
        points.add(new Point(46.77638083, 6.75572017, 552));
        points.add(new Point(46.7763875, 6.75571583, 552));
        points.add(new Point(46.7763865, 6.755711, 553));
        points.add(new Point(46.77638167, 6.75570233, 554));
        points.add(new Point(46.77637533, 6.75569483, 554));
        points.add(new Point(46.77637117, 6.755689, 554));
        points.add(new Point(46.77636167, 6.755686, 552));
        points.add(new Point(46.77634567, 6.75568633, 548));
        points.add(new Point(46.776322, 6.75569067, 545));
        points.add(new Point(46.77629583, 6.75568683, 543));
        points.add(new Point(46.77626783, 6.75567167, 541));
        points.add(new Point(46.77624133, 6.75564933, 539));
        points.add(new Point(46.776213, 6.7556305, 538));
        points.add(new Point(46.77618467, 6.755615, 536));
        points.add(new Point(46.77615733, 6.75559817, 535));
        points.add(new Point(46.77613667, 6.75557517, 534));
        points.add(new Point(46.776127, 6.75555167, 530));
        points.add(new Point(46.776124, 6.75552933, 530));
        points.add(new Point(46.77612367, 6.75551417, 530));
        points.add(new Point(46.776122, 6.75549933, 530));
        points.add(new Point(46.77613033, 6.7554935, 532));
        points.add(new Point(46.776138, 6.75549117, 533));
        points.add(new Point(46.77614633, 6.755491, 532));
        points.add(new Point(46.776148, 6.7554845, 531));
        points.add(new Point(46.77615217, 6.75547883, 530));
        points.add(new Point(46.7761565, 6.755473, 530));
        points.add(new Point(46.77616233, 6.75546783, 530));
        points.add(new Point(46.77616983, 6.755461, 528));
        points.add(new Point(46.77619267, 6.755451, 525));
        points.add(new Point(46.77622633, 6.7554305, 523));
        points.add(new Point(46.776258, 6.75541183, 523));
        points.add(new Point(46.776276, 6.75540583, 523));
        points.add(new Point(46.77628283, 6.7554105, 523));
        points.add(new Point(46.77628967, 6.75541017, 524));
        points.add(new Point(46.77629683, 6.7554005, 526));
        points.add(new Point(46.77630433, 6.75539317, 525));
        points.add(new Point(46.77631633, 6.75539117, 524));
        points.add(new Point(46.77632883, 6.75539133, 523));
        points.add(new Point(46.7763415, 6.7553915, 521));
        points.add(new Point(46.77634867, 6.7553865, 522));
        points.add(new Point(46.77635483, 6.75538117, 521));
        points.add(new Point(46.77635917, 6.755373, 521));
        points.add(new Point(46.77636417, 6.7553665, 521));
        points.add(new Point(46.7763665, 6.755357, 520));
        points.add(new Point(46.77636783, 6.7553485, 518));
        points.add(new Point(46.776368, 6.75533733, 518));
        points.add(new Point(46.77636617, 6.7553195, 519));
        points.add(new Point(46.7763645, 6.75529083, 521));
        points.add(new Point(46.7763625, 6.755261, 521));
        points.add(new Point(46.77636283, 6.75523517, 521));
        points.add(new Point(46.77636217, 6.7552145, 522));
        points.add(new Point(46.77636233, 6.75519383, 522));
        points.add(new Point(46.776362, 6.75517067, 522));
        points.add(new Point(46.77636133, 6.7551495, 523));
        points.add(new Point(46.77635817, 6.75512883, 524));
        points.add(new Point(46.776354, 6.75511017, 525));
        points.add(new Point(46.77634783, 6.75508967, 526));
        points.add(new Point(46.776339, 6.75506517, 527));
        points.add(new Point(46.77632883, 6.75504067, 529));
        points.add(new Point(46.77631783, 6.75502, 530));
        points.add(new Point(46.776311, 6.75500417, 531));
        points.add(new Point(46.7763055, 6.7549885, 532));
        points.add(new Point(46.77630333, 6.75497133, 533));
        points.add(new Point(46.7763035, 6.7549555, 533));
        points.add(new Point(46.77630667, 6.754941, 532));
        points.add(new Point(46.7763115, 6.75492767, 533));
        points.add(new Point(46.77631567, 6.7549135, 535));
        points.add(new Point(46.77631817, 6.7548975, 536));
        points.add(new Point(46.77632067, 6.75487917, 538));
        points.add(new Point(46.7763255, 6.75485717, 540));
        points.add(new Point(46.776332, 6.75483267, 541));
        points.add(new Point(46.77633867, 6.75480817, 542));
        points.add(new Point(46.77634133, 6.7547875, 544));
        points.add(new Point(46.77634217, 6.75477217, 545));
        points.add(new Point(46.7763435, 6.754764, 547));
        points.add(new Point(46.77634783, 6.75475983, 549));
        points.add(new Point(46.7763545, 6.75475767, 550));
        points.add(new Point(46.7763605, 6.75475633, 551));
        points.add(new Point(46.77636433, 6.75475683, 552));
        points.add(new Point(46.77636667, 6.75475867, 552));
        points.add(new Point(46.77636967, 6.75476067, 553));
        points.add(new Point(46.77637417, 6.75476683, 553));
        points.add(new Point(46.77637783, 6.75477583, 554));
        points.add(new Point(46.776381, 6.754789, 554));
        points.add(new Point(46.77638583, 6.75480267, 555));
        points.add(new Point(46.77640433, 6.754819, 556));
        points.add(new Point(46.77643733, 6.75484117, 557));
        points.add(new Point(46.77647683, 6.75486817, 559));
        points.add(new Point(46.77651683, 6.7548995, 559));
        points.add(new Point(46.776553, 6.75492967, 560));
        points.add(new Point(46.77659383, 6.754961, 560));
        points.add(new Point(46.77663417, 6.75499083, 561));
        points.add(new Point(46.77668117, 6.75501933, 562));
        points.add(new Point(46.77673117, 6.7550425, 562));
        points.add(new Point(46.776786, 6.75506233, 563));
        points.add(new Point(46.77683983, 6.75508267, 563));
        points.add(new Point(46.77689167, 6.75510583, 563));
        points.add(new Point(46.77693833, 6.75513183, 563));
        points.add(new Point(46.776985, 6.7551575, 562));
        points.add(new Point(46.77702967, 6.7551855, 562));
        points.add(new Point(46.77707483, 6.75521517, 562));
        points.add(new Point(46.77711817, 6.75524567, 561));
        points.add(new Point(46.77716533, 6.75527017, 560));
        points.add(new Point(46.777218, 6.75529017, 559));
        points.add(new Point(46.7772755, 6.75530683, 556));
        points.add(new Point(46.77733583, 6.75532867, 555));
        points.add(new Point(46.7774015, 6.75535567, 553));
        points.add(new Point(46.77747267, 6.755388, 550));
        points.add(new Point(46.77754717, 6.75542717, 546));
        points.add(new Point(46.7776275, 6.75548183, 539));
        points.add(new Point(46.77769767, 6.7555415, 538));
        points.add(new Point(46.777758, 6.7555995, 538));
        points.add(new Point(46.777797, 6.755637, 538));
        points.add(new Point(46.77783283, 6.755657, 538));
        points.add(new Point(46.77787033, 6.75565933, 538));
        points.add(new Point(46.77791833, 6.7556485, 537));
        points.add(new Point(46.77796667, 6.755634, 536));
        points.add(new Point(46.7780075, 6.7556135, 535));
        points.add(new Point(46.77804233, 6.755593, 534));
        points.add(new Point(46.7780745, 6.75556917, 533));
        points.add(new Point(46.77810817, 6.75554617, 532));
        points.add(new Point(46.778153, 6.75551317, 530));
        points.add(new Point(46.7782075, 6.75545317, 528));
        points.add(new Point(46.77826233, 6.75536317, 527));
        points.add(new Point(46.77830367, 6.75526267, 526));
        points.add(new Point(46.7783345, 6.7551865, 525));
        points.add(new Point(46.7783635, 6.755142, 525));
        points.add(new Point(46.77838583, 6.755128, 524));
        points.add(new Point(46.77840217, 6.75512433, 524));
        points.add(new Point(46.77841717, 6.75512717, 523));
        points.add(new Point(46.778437, 6.755129, 523));
        points.add(new Point(46.77845967, 6.75513183, 523));
        points.add(new Point(46.77848967, 6.75513717, 523));
        points.add(new Point(46.77851817, 6.75513533, 522));
        points.add(new Point(46.77854567, 6.75512433, 522));
        points.add(new Point(46.77856683, 6.75510233, 522));
        points.add(new Point(46.77858783, 6.755071, 522));
        points.add(new Point(46.7786075, 6.75503417, 521));
        points.add(new Point(46.77862183, 6.75499, 520));
        points.add(new Point(46.778628, 6.75493833, 520));
        points.add(new Point(46.7786285, 6.75487783, 519));
        points.add(new Point(46.77862633, 6.75481083, 519));
        points.add(new Point(46.7786245, 6.75474133, 518));
        points.add(new Point(46.77862117, 6.7546705, 518));
        points.add(new Point(46.77861717, 6.75459767, 518));
        points.add(new Point(46.77861317, 6.7545235, 518));
        points.add(new Point(46.77860667, 6.7544455, 517));
        points.add(new Point(46.77859583, 6.75436383, 517));
        points.add(new Point(46.7785865, 6.754279, 516));
        points.add(new Point(46.77858, 6.7541915, 515));
        points.add(new Point(46.778587, 6.75410267, 515));
        points.add(new Point(46.778586, 6.7540105, 513));
        points.add(new Point(46.7785985, 6.75392017, 511));
        points.add(new Point(46.77861617, 6.75382883, 509));
        points.add(new Point(46.77865583, 6.75374083, 508));
        points.add(new Point(46.77870067, 6.75365383, 507));
        points.add(new Point(46.77875, 6.75357567, 506));
        points.add(new Point(46.77879967, 6.753503, 506));
        points.add(new Point(46.778845, 6.75344067, 505));
        points.add(new Point(46.77888783, 6.75338267, 505));
        points.add(new Point(46.77893417, 6.75332633, 504));
        points.add(new Point(46.7789895, 6.7532675, 504));
        points.add(new Point(46.77905017, 6.75320367, 503));
        points.add(new Point(46.77910483, 6.75313683, 502));
        points.add(new Point(46.77914967, 6.753066, 501));
        points.add(new Point(46.77918733, 6.752989, 501));
        points.add(new Point(46.77922467, 6.752909, 500));
        points.add(new Point(46.7792605, 6.752825, 499));
        points.add(new Point(46.77929783, 6.7527435, 498));
        points.add(new Point(46.7793385, 6.75266333, 499));
        points.add(new Point(46.77938267, 6.7525865, 498));
        points.add(new Point(46.77942333, 6.7525105, 498));
        points.add(new Point(46.77945433, 6.75243333, 497));
        points.add(new Point(46.779475, 6.75235283, 497));
        points.add(new Point(46.7794965, 6.75227083, 496));
        points.add(new Point(46.779521, 6.7521885, 496));
        points.add(new Point(46.7795555, 6.75210867, 495));
        points.add(new Point(46.77959283, 6.75203217, 495));
        points.add(new Point(46.7796365, 6.751961, 495));
        points.add(new Point(46.77968983, 6.75189667, 494));
        points.add(new Point(46.77974417, 6.7518305, 494));
        points.add(new Point(46.77979767, 6.7517625, 494));
        points.add(new Point(46.7798425, 6.751691, 494));
        points.add(new Point(46.77988133, 6.75162067, 495));
        points.add(new Point(46.77991633, 6.75155233, 495));
        points.add(new Point(46.7799415, 6.751485, 494));
        points.add(new Point(46.7799675, 6.751425, 494));
        points.add(new Point(46.7799905, 6.751363, 494));
        points.add(new Point(46.780015, 6.75129883, 494));
        points.add(new Point(46.78003667, 6.75122933, 493));
        points.add(new Point(46.78005833, 6.751152, 493));
        points.add(new Point(46.78008133, 6.75106367, 492));
        points.add(new Point(46.78010117, 6.75096367, 491));
        points.add(new Point(46.780115, 6.75086767, 491));
        points.add(new Point(46.78011617, 6.75076933, 491));
        points.add(new Point(46.78010233, 6.750666, 493));
        points.add(new Point(46.780076, 6.75055867, 495));
        points.add(new Point(46.78005083, 6.75045917, 496));
        points.add(new Point(46.78003433, 6.7503705, 497));
        points.add(new Point(46.7800215, 6.75028467, 497));
        points.add(new Point(46.78000133, 6.7501915, 497));
        points.add(new Point(46.7799735, 6.75008083, 496));
        points.add(new Point(46.77995233, 6.74995633, 495));
        points.add(new Point(46.77994583, 6.74982167, 493));
        points.add(new Point(46.77996483, 6.74968867, 493));
        points.add(new Point(46.77999067, 6.7495555, 492));
        points.add(new Point(46.780016, 6.749425, 491));
        points.add(new Point(46.78002933, 6.7492935, 490));
        points.add(new Point(46.780044, 6.74916267, 489));
        points.add(new Point(46.78006017, 6.74903133, 488));
        points.add(new Point(46.7800755, 6.74890133, 487));
        points.add(new Point(46.78008733, 6.74877317, 486));
        points.add(new Point(46.780099, 6.74864883, 486));
        points.add(new Point(46.78011433, 6.74852933, 485));
        points.add(new Point(46.78013767, 6.74841483, 484));
        points.add(new Point(46.78017233, 6.7483095, 483));
        points.add(new Point(46.780215, 6.74821183, 483));
        points.add(new Point(46.78026067, 6.74811817, 482));
        points.add(new Point(46.7803035, 6.74801983, 481));
        points.add(new Point(46.78034117, 6.7479165, 480));
        points.add(new Point(46.78037667, 6.74780983, 480));
        points.add(new Point(46.78041033, 6.74770367, 479));
        points.add(new Point(46.780446, 6.747599, 479));
        points.add(new Point(46.78048117, 6.74749833, 477));
        points.add(new Point(46.78052233, 6.747405, 476));
        points.add(new Point(46.7805715, 6.74731567, 475));
        points.add(new Point(46.7806275, 6.747232, 474));
        points.add(new Point(46.7806825, 6.747146, 474));
        points.add(new Point(46.78073233, 6.74705967, 474));
        points.add(new Point(46.7807765, 6.7469695, 474));
        points.add(new Point(46.78081767, 6.74687833, 473));
        points.add(new Point(46.78085617, 6.74678433, 473));
        points.add(new Point(46.78089117, 6.74668333, 472));
        points.add(new Point(46.78092333, 6.746578, 472));
        points.add(new Point(46.780952, 6.7464685, 471));
        points.add(new Point(46.7809815, 6.74635783, 470));
        points.add(new Point(46.78101333, 6.7462445, 470));
        points.add(new Point(46.78105333, 6.7461345, 470));
        points.add(new Point(46.7811, 6.74602983, 469));
        points.add(new Point(46.781154, 6.74593867, 469));
        points.add(new Point(46.78121833, 6.7458665, 469));
        points.add(new Point(46.78129017, 6.74580833, 468));
        points.add(new Point(46.78136067, 6.74574883, 468));
        points.add(new Point(46.78142517, 6.74568317, 468));
        points.add(new Point(46.781486, 6.74561717, 468));
        points.add(new Point(46.78155017, 6.745564, 468));
        points.add(new Point(46.7816155, 6.74552117, 467));
        points.add(new Point(46.78168083, 6.74548867, 467));
        points.add(new Point(46.78174617, 6.74546217, 466));
        points.add(new Point(46.781808, 6.7454385, 466));
        points.add(new Point(46.7818655, 6.74541533, 466));
        points.add(new Point(46.7819195, 6.74538967, 466));
        points.add(new Point(46.78197717, 6.74536083, 465));
        points.add(new Point(46.78203983, 6.74532733, 465));
        points.add(new Point(46.78210633, 6.74529367, 465));
        points.add(new Point(46.78217017, 6.7452635, 465));
        points.add(new Point(46.78223483, 6.74524267, 465));
        points.add(new Point(46.78229333, 6.74522717, 465));
        points.add(new Point(46.7823555, 6.74522283, 465));
        points.add(new Point(46.78241317, 6.745224, 464));
        points.add(new Point(46.78247983, 6.74522817, 464));
        points.add(new Point(46.782549, 6.74522133, 464));
        points.add(new Point(46.7826255, 6.745202, 464));
        points.add(new Point(46.78269783, 6.74516867, 464));
        points.add(new Point(46.78277117, 6.74512367, 463));
        points.add(new Point(46.78284367, 6.74506933, 462));
        points.add(new Point(46.78291633, 6.74501117, 461));
        points.add(new Point(46.78298417, 6.74495183, 461));
        points.add(new Point(46.78305017, 6.74489967, 460));
        points.add(new Point(46.783112, 6.74485917, 459));
        points.add(new Point(46.78317267, 6.74484217, 458));
        points.add(new Point(46.7832305, 6.74483467, 457));
        points.add(new Point(46.7832855, 6.74484167, 456));
        points.add(new Point(46.783337, 6.744857, 455));
        points.add(new Point(46.78338467, 6.744878, 455));
        points.add(new Point(46.78343783, 6.7448965, 455));
        points.add(new Point(46.783491, 6.7449115, 454));
        points.add(new Point(46.7835425, 6.74493217, 454));
        points.add(new Point(46.78359383, 6.744953, 453));
        points.add(new Point(46.78364533, 6.744966, 453));
        points.add(new Point(46.78369667, 6.744974, 452));
        points.add(new Point(46.78373933, 6.74498167, 452));
        points.add(new Point(46.78378117, 6.744988, 452));
        points.add(new Point(46.78382467, 6.74498483, 452));
        points.add(new Point(46.783876, 6.74496983, 452));
        points.add(new Point(46.783928, 6.74494083, 451));
        points.add(new Point(46.783981, 6.74490733, 452));
        points.add(new Point(46.78403483, 6.74487233, 453));
        points.add(new Point(46.78409217, 6.744844, 453));
        points.add(new Point(46.7841545, 6.74481817, 454));
        points.add(new Point(46.7842145, 6.74479817, 454));
        points.add(new Point(46.78427217, 6.74477183, 454));
        points.add(new Point(46.78432783, 6.74474117, 454));
        points.add(new Point(46.78437883, 6.744705, 454));
        points.add(new Point(46.784426, 6.744674, 454));
        points.add(new Point(46.7844695, 6.744645, 453));
        points.add(new Point(46.7845165, 6.744617, 453));
        points.add(new Point(46.784559, 6.74459267, 452));
        points.add(new Point(46.78459967, 6.7445695, 453));
        points.add(new Point(46.78464033, 6.74454633, 454));
        points.add(new Point(46.784686, 6.7445215, 454));
        points.add(new Point(46.78473517, 6.74449467, 455));
        points.add(new Point(46.78478383, 6.74446717, 456));
        points.add(new Point(46.78483633, 6.74443717, 457));
        points.add(new Point(46.784888, 6.7444075, 458));
        points.add(new Point(46.784942, 6.744379, 458));
        points.add(new Point(46.78499417, 6.74435433, 459));
        points.add(new Point(46.78505, 6.744332, 460));
        points.add(new Point(46.78510633, 6.7443145, 460));
        points.add(new Point(46.78516817, 6.74429983, 460));
        points.add(new Point(46.78523133, 6.74429633, 460));
        points.add(new Point(46.78529717, 6.74430533, 460));
        points.add(new Point(46.7853615, 6.74433033, 461));
        points.add(new Point(46.78543017, 6.744365, 462));
        points.add(new Point(46.78550233, 6.744399, 462));
        points.add(new Point(46.78557583, 6.7444235, 461));
        points.add(new Point(46.78564583, 6.74443133, 461));
        points.add(new Point(46.78571233, 6.74442417, 461));
        points.add(new Point(46.78577917, 6.74440733, 461));
        points.add(new Point(46.78584467, 6.74438767, 460));
        points.add(new Point(46.78590733, 6.74436733, 459));
        points.add(new Point(46.7859695, 6.74434367, 459));
        points.add(new Point(46.78603667, 6.74431633, 458));
        points.add(new Point(46.786109, 6.74429, 458));
        points.add(new Point(46.786184, 6.74426783, 458));
        points.add(new Point(46.786255, 6.74424817, 458));
        points.add(new Point(46.7863245, 6.7442265, 458));
        points.add(new Point(46.78639017, 6.744204, 458));
        points.add(new Point(46.78645333, 6.74418133, 457));
        points.add(new Point(46.786516, 6.7441585, 457));
        points.add(new Point(46.7865835, 6.74413233, 457));
        points.add(new Point(46.78665233, 6.74410417, 456));
        points.add(new Point(46.78671933, 6.74407533, 456));
        points.add(new Point(46.7867855, 6.7440465, 455));
        points.add(new Point(46.78685317, 6.7440185, 455));
        points.add(new Point(46.78692683, 6.74399033, 454));
        points.add(new Point(46.78700767, 6.74396533, 455));
        points.add(new Point(46.7870935, 6.74394417, 455));
        points.add(new Point(46.7871795, 6.74392683, 455));
        points.add(new Point(46.78726133, 6.7439125, 455));
        points.add(new Point(46.787343, 6.74389867, 455));
        points.add(new Point(46.787427, 6.74388617, 455));
        points.add(new Point(46.7875135, 6.7438735, 455));
        points.add(new Point(46.78759917, 6.74386, 455));
        points.add(new Point(46.78768367, 6.74384583, 455));
        points.add(new Point(46.78776567, 6.74383167, 455));
        points.add(new Point(46.78785, 6.74381867, 455));
        points.add(new Point(46.78793283, 6.7438045, 454));
        points.add(new Point(46.78801433, 6.7437905, 454));
        points.add(new Point(46.7880925, 6.74377683, 454));
        points.add(new Point(46.78816983, 6.7437655, 454));
        points.add(new Point(46.78824617, 6.74375467, 454));
        points.add(new Point(46.78832183, 6.74374367, 454));
        points.add(new Point(46.7883965, 6.74373083, 454));
        points.add(new Point(46.788469, 6.7437185, 454));
        points.add(new Point(46.78853867, 6.74370633, 454));
        points.add(new Point(46.7886055, 6.74369567, 454));
        points.add(new Point(46.78866883, 6.74368233, 454));
        points.add(new Point(46.78902367, 6.74374967, 453));
        points.add(new Point(46.7890185, 6.74378117, 454));
        points.add(new Point(46.78901117, 6.743815, 454));
        points.add(new Point(46.7890015, 6.74384883, 455));
        points.add(new Point(46.78898867, 6.7438795, 455));
        points.add(new Point(46.788981, 6.74390583, 455));
        points.add(new Point(46.788975, 6.743931, 455));
        points.add(new Point(46.78897183, 6.7439575, 455));
        points.add(new Point(46.788968, 6.743988, 456));
        points.add(new Point(46.7889655, 6.74401767, 456));
        points.add(new Point(46.78896567, 6.74404617, 457));
        points.add(new Point(46.78896517, 6.744073, 458));
        points.add(new Point(46.78896967, 6.74410033, 457));
        points.add(new Point(46.7889855, 6.74412733, 457));
        points.add(new Point(46.78900533, 6.74414883, 457));
        points.add(new Point(46.7890275, 6.74416433, 457));
        points.add(new Point(46.7890445, 6.74417317, 457));
        points.add(new Point(46.78906317, 6.7441795, 458));
        points.add(new Point(46.78908233, 6.74418533, 458));
        points.add(new Point(46.78910183, 6.74419233, 458));
        points.add(new Point(46.789122, 6.74419833, 458));
        points.add(new Point(46.78914117, 6.74420483, 458));
        points.add(new Point(46.78915967, 6.74421133, 457));
        points.add(new Point(46.7891785, 6.74422567, 457));
        points.add(new Point(46.78919717, 6.74424333, 457));
        points.add(new Point(46.789216, 6.7442665, 456));
        points.add(new Point(46.78923217, 6.7442925, 456));
        points.add(new Point(46.78924417, 6.74432133, 456));
        points.add(new Point(46.789252, 6.744352, 457));
        points.add(new Point(46.78925667, 6.74438083, 457));
        points.add(new Point(46.7892585, 6.7444115, 458));
        points.add(new Point(46.78925817, 6.744444, 459));
        points.add(new Point(46.78925467, 6.74447783, 459));
        points.add(new Point(46.78924983, 6.74450833, 460));
        points.add(new Point(46.789243, 6.74453417, 460));
        points.add(new Point(46.78923533, 6.744555, 460));
        points.add(new Point(46.78922483, 6.74457317, 460));
        points.add(new Point(46.78921417, 6.74458783, 460));
        points.add(new Point(46.789203, 6.74460283, 461));
        points.add(new Point(46.78919083, 6.74461783, 462));
        points.add(new Point(46.78917383, 6.74463233, 462));
        points.add(new Point(46.78915433, 6.74464417, 462));
        points.add(new Point(46.78913633, 6.74465433, 463));
        points.add(new Point(46.78911833, 6.74466467, 463));
        points.add(new Point(46.78910033, 6.74467317, 463));
        points.add(new Point(46.78908117, 6.7446805, 463));
        points.add(new Point(46.78906283, 6.74468717, 463));
        points.add(new Point(46.78904333, 6.744695, 464));
        points.add(new Point(46.78902367, 6.74470483, 464));
        points.add(new Point(46.78900483, 6.74471383, 464));
        points.add(new Point(46.78898733, 6.74472117, 465));
        points.add(new Point(46.78897167, 6.74472533, 465));
        points.add(new Point(46.78895683, 6.74472983, 466));
        points.add(new Point(46.788941, 6.744738, 465));
        points.add(new Point(46.788924, 6.74475333, 465));
        points.add(new Point(46.78890417, 6.74477117, 465));
        points.add(new Point(46.78888317, 6.74479, 466));
        points.add(new Point(46.7888595, 6.74480767, 466));
        points.add(new Point(46.78883583, 6.744826, 467));
        points.add(new Point(46.78881117, 6.74484217, 468));
        points.add(new Point(46.78878783, 6.74485533, 469));
        points.add(new Point(46.78876683, 6.74486517, 470));
        points.add(new Point(46.78874917, 6.74487467, 469));
        points.add(new Point(46.78873417, 6.74488567, 469));
        points.add(new Point(46.78871767, 6.74490117, 470));
        points.add(new Point(46.78870017, 6.74491617, 470));
        points.add(new Point(46.78868267, 6.74492833, 470));
        points.add(new Point(46.78866883, 6.74493633, 470));
        points.add(new Point(46.78865917, 6.74494483, 470));
        points.add(new Point(46.78865517, 6.74495517, 469));
        points.add(new Point(46.78865467, 6.74496533, 469));
        points.add(new Point(46.788658, 6.744972, 469));
        points.add(new Point(46.788663, 6.74497133, 469));
        points.add(new Point(46.78867217, 6.74496233, 469));
        points.add(new Point(46.78868433, 6.74494883, 469));
        points.add(new Point(46.78870033, 6.74493217, 469));
        points.add(new Point(46.78872, 6.74491533, 469));
        points.add(new Point(46.7887445, 6.7448965, 469));
        points.add(new Point(46.788772, 6.74487733, 469));
        points.add(new Point(46.78880117, 6.74485817, 469));
        points.add(new Point(46.7888305, 6.74483817, 468));
        points.add(new Point(46.78886167, 6.74481667, 468));
        points.add(new Point(46.78889533, 6.74479417, 467));
        points.add(new Point(46.7889295, 6.7447745, 466));
        points.add(new Point(46.78896683, 6.74475433, 466));
        points.add(new Point(46.78900583, 6.74473583, 465));
        points.add(new Point(46.78904833, 6.744716, 465));
        points.add(new Point(46.789095, 6.7446895, 463));
        points.add(new Point(46.7891445, 6.7446555, 462));
        points.add(new Point(46.78919067, 6.7446125, 461));
        points.add(new Point(46.78922267, 6.744555, 458));
        points.add(new Point(46.789239, 6.74448567, 455));
        points.add(new Point(46.78924083, 6.74441217, 453));
        points.add(new Point(46.789241, 6.74435033, 453));
        points.add(new Point(46.78924017, 6.744299, 451));
        points.add(new Point(46.78923617, 6.74425517, 449));
        points.add(new Point(46.78922133, 6.74421667, 446));
        points.add(new Point(46.78918383, 6.74418733, 444));
        points.add(new Point(46.78912583, 6.7441645, 442));
        points.add(new Point(46.78906767, 6.74413517, 441));
        points.add(new Point(46.78903133, 6.74408367, 439));
        points.add(new Point(46.7890245, 6.74401167, 436));
        points.add(new Point(46.78903083, 6.74393617, 434));
        points.add(new Point(46.78904033, 6.74386433, 433));
        points.add(new Point(46.78905183, 6.74379583, 433));
        points.add(new Point(46.7890635, 6.7437405, 434));
        points.add(new Point(46.78907683, 6.74370317, 432));
        points.add(new Point(46.789084, 6.743684, 431));
        points.add(new Point(46.78908067, 6.74366017, 432));
        points.add(new Point(46.789067, 6.74363233, 432));
        points.add(new Point(46.78905183, 6.74360367, 431));
        points.add(new Point(46.78903617, 6.74359117, 435));
        points.add(new Point(46.789023, 6.74358733, 436));
        points.add(new Point(46.78900833, 6.743588, 437));
        points.add(new Point(46.7889925, 6.743583, 438));
        points.add(new Point(46.78897683, 6.74357767, 438));
        points.add(new Point(46.78896333, 6.743573, 439));
        points.add(new Point(46.78896033, 6.743571, 440));
        points.add(new Point(46.7889625, 6.74356867, 441));
        points.add(new Point(46.78896583, 6.74356617, 441));
        points.add(new Point(46.788966, 6.74356533, 441));
        points.add(new Point(46.78896367, 6.74356533, 442));
        points.add(new Point(46.78896167, 6.74356417, 443));
        points.add(new Point(46.78895933, 6.74356183, 443));

        tracks.add(new Track(1, "Vallons des Vaux (test)", new Date(), 1000*60*60*2*15, 7.2, 8715, 319, 325, "Xcountry", points, null));
        tracks.add(new Track(2, "Neuchatel (test)", new Date(), 1000*3600*3 + 1000*128, 3.1, 8715, 319, 325, "Xcountry", points, null));
        /*
        tracks.add(new Track(3, "Yverdon", new Date(), 0, 0, 8715, 319, 325, "Xcountry", points, null));
        tracks.add(new Track(4, "Col du Pillon", new Date(), 0, 0, 8715, 319, 325, "Xcountry", points, null));
        tracks.add(new Track("Mont-Blanc", new Date(), 1000, 10, 10));
        tracks.add(new Track("Lausanne", new Date(), 1000, 10, 10));
        tracks.add(new Track("Delémont", new Date(), 1000, 10, 10));
        tracks.add(new Track("Lausanne", new Date(), 1000, 10, 10));
        tracks.add(new Track("Neuchatel", new Date(), 1000, 10, 10));
        tracks.add(new Track("Yverdon", new Date(), 1000, 10, 10));
        tracks.add(new Track("Delémont", new Date(), 1000, 10, 10));
        */
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {

        mContext = getActivity();
        View view = inflater.inflate(R.layout.fragment_tracks_list, container, false);

        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.speed);
        ByteArrayOutputStream stream = new ByteArrayOutputStream();
        bitmap.compress(Bitmap.CompressFormat.JPEG, 100, stream);
        byte[] bitMapData = stream.toByteArray();
        tracks.get(0).setImage(bitMapData);

        // Set the adapter
        if (view instanceof RecyclerView) {
            Context context = view.getContext();
            RecyclerView recyclerView = (RecyclerView) view;
            recyclerView.setLayoutManager(new LinearLayoutManager(context));
            tracksAdapter = new MyTracksRecyclerViewAdapter(tracks);
            recyclerView.setAdapter(tracksAdapter);
            recyclerView.addOnItemTouchListener(
                    new RecyclerItemClickListener(context, new RecyclerItemClickListener.OnItemClickListener() {
                        @Override
                        public void onItemClick(View view, int position) {
                            // Start a new Activity via Intent
                            Intent intent = new Intent();
                            intent.setClass(getActivity(), TrackActivity.class);
                            intent.putExtra("track", tracks.get(position));
                            startActivity(intent);
                        }
                    })
            );
        }

        // Retrieve tracks from DB
        new FetchTracksTask().execute();

        return view;
    }

    /**
     * Get contacts from DB asynchronously
     */
    private class FetchTracksTask extends AsyncTask<Void, Void, ArrayList<Track>> {
        @Override
        protected ArrayList<Track> doInBackground(Void... voids) {
            return DatabaseHelper.getInstance(mContext).getTracks(true);
        }

        protected void onPostExecute(ArrayList<Track> result) {
            tracks.addAll(result);
            tracksAdapter.notifyDataSetChanged();
        }
    }
}
